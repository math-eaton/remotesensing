const Fi="14.9.17",fi=(n,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:n}),mi=(n,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:n}),wn=(n,t)=>({startTime:t,type:"setValue",value:n}),Pi=(n,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:n}),qi=(n,t,{startTime:e,target:s,timeConstant:i})=>s+(t-s)*Math.exp((e-n)/i),Ve=n=>n.type==="exponentialRampToValue",Ns=n=>n.type==="linearRampToValue",re=n=>Ve(n)||Ns(n),Wn=n=>n.type==="setValue",Zt=n=>n.type==="setValueCurve",Os=(n,t,e,s)=>{const i=n[t];return i===void 0?s:re(i)||Wn(i)?i.value:Zt(i)?i.values[i.values.length-1]:qi(e,Os(n,t-1,i.startTime,s),i)},_i=(n,t,e,s,i)=>e===void 0?[s.insertTime,i]:re(e)?[e.endTime,e.value]:Wn(e)?[e.startTime,e.value]:Zt(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,Os(n,t-1,e.startTime,i)],Tn=n=>n.type==="cancelAndHold",bn=n=>n.type==="cancelScheduledValues",ie=n=>Tn(n)||bn(n)?n.cancelTime:Ve(n)||Ns(n)?n.endTime:n.startTime,gi=(n,t,e,{endTime:s,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((n-t)/(s-t)):0,yi=(n,t,e,{endTime:s,value:i})=>e+(n-t)/(s-t)*(i-e),Zr=(n,t)=>{const e=Math.floor(t),s=Math.ceil(t);return e===s?n[e]:(1-(t-e))*n[e]+(1-(s-t))*n[s]},Xr=(n,{duration:t,startTime:e,values:s})=>{const i=(n-e)/t*(s.length-1);return Zr(s,i)},bs=n=>n.type==="setTarget";class Qr{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=ie(t);if(Tn(t)||bn(t)){const s=this._automationEvents.findIndex(r=>bn(t)&&Zt(r)?r.startTime+r.duration>=e:ie(r)>=e),i=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),Tn(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&re(i)){if(r!==void 0&&bs(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Zt(r)?r.startTime+r.duration:ie(r),a=r===void 0?this._defaultValue:Zt(r)?r.values[r.values.length-1]:r.value,c=Ve(i)?gi(e,o,a,i):yi(e,o,a,i),u=Ve(i)?fi(c,e,this._currenTime):mi(c,e,this._currenTime);this._automationEvents.push(u)}if(r!==void 0&&bs(r)&&this._automationEvents.push(wn(this.getValue(e),e)),r!==void 0&&Zt(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),u=o/(c-1)*a,l=r.values.slice(0,c);if(u<1)for(let h=1;h<c;h+=1){const p=u*h%1;l[h]=r.values[h-1]*(1-p)+r.values[h]*p}this._automationEvents[this._automationEvents.length-1]=Pi(l,r.startTime,o)}}}else{const s=this._automationEvents.findIndex(o=>ie(o)>e),i=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(i!==void 0&&Zt(i)&&ie(i)+i.duration>e)return!1;const r=Ve(t)?fi(t.value,t.endTime,this._currenTime):Ns(t)?mi(t.value,e,this._currenTime):t;if(s===-1)this._automationEvents.push(r);else{if(Zt(t)&&e+t.duration>ie(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(s=>ie(s)>t);if(e>1){const s=this._automationEvents.slice(e-1),i=s[0];bs(i)&&s.unshift(wn(Os(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=s}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>ie(o)>t),s=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&bs(r)&&(s===void 0||!re(s)||s.insertTime>t))return qi(t,Os(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Wn(r)&&(s===void 0||!re(s)))return r.value;if(r!==void 0&&Zt(r)&&(s===void 0||!re(s)||r.startTime+r.duration>t))return t<r.startTime+r.duration?Xr(t,r):r.values[r.values.length-1];if(r!==void 0&&re(r)&&(s===void 0||!re(s)))return r.value;if(s!==void 0&&Ve(s)){const[o,a]=_i(this._automationEvents,i,r,s,this._defaultValue);return gi(t,o,a,s)}if(s!==void 0&&Ns(s)){const[o,a]=_i(this._automationEvents,i,r,s,this._defaultValue);return yi(t,o,a,s)}return this._defaultValue}}const Yr=n=>({cancelTime:n,type:"cancelAndHold"}),Hr=n=>({cancelTime:n,type:"cancelScheduledValues"}),Jr=(n,t)=>({endTime:t,type:"exponentialRampToValue",value:n}),Kr=(n,t)=>({endTime:t,type:"linearRampToValue",value:n}),to=(n,t,e)=>({startTime:t,target:n,timeConstant:e,type:"setTarget"}),eo=()=>new DOMException("","AbortError"),so=n=>(t,e,[s,i,r],o)=>{n(t[i],[e,s,r],a=>a[0]===e&&a[1]===s,o)},no=n=>(t,e,s)=>{const i=[];for(let r=0;r<s.numberOfInputs;r+=1)i.push(new Set);n.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},io=n=>(t,e)=>{n.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},qe=new WeakSet,Wi=new WeakMap,Ln=new WeakMap,Li=new WeakMap,jn=new WeakMap,nn=new WeakMap,ji=new WeakMap,xn=new WeakMap,Sn=new WeakMap,Cn=new WeakMap,Bi={construct(){return Bi}},ro=n=>{try{const t=new Proxy(n,Bi);new t}catch{return!1}return!0},vi=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,wi=(n,t)=>{const e=[];let s=n.replace(/^[\s]+/,""),i=s.match(vi);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),s=s.slice(i[0].length).replace(/^[\s]+/,""),i=s.match(vi)}return[e.join(";"),s]},Ti=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},bi=n=>{if(!ro(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},oo=(n,t,e,s,i,r,o,a,c,u,l,h,p)=>{let f=0;return(d,m,_={credentials:"omit"})=>{const y=l.get(d);if(y!==void 0&&y.has(m))return Promise.resolve();const x=u.get(d);if(x!==void 0){const g=x.get(m);if(g!==void 0)return g}const S=r(d),k=S.audioWorklet===void 0?i(m).then(([g,w])=>{const[T,v]=wi(g,w),O=`${T};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${v}
})})(window,'_AWGS')`;return e(O)}).then(()=>{const g=p._AWGS.pop();if(g===void 0)throw new SyntaxError;s(S.currentTime,S.sampleRate,()=>g(class{},void 0,(w,T)=>{if(w.trim()==="")throw t();const v=Sn.get(S);if(v!==void 0){if(v.has(w))throw t();bi(T),Ti(T.parameterDescriptors),v.set(w,T)}else bi(T),Ti(T.parameterDescriptors),Sn.set(S,new Map([[w,T]]))},S.sampleRate,void 0,void 0))}):Promise.all([i(m),Promise.resolve(n(h,h))]).then(([[g,w],T])=>{const v=f+1;f=v;const[O,N]=wi(g,w),E=`${O};((AudioWorkletProcessor,registerProcessor)=>{${N}
})(${T?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${T?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${T?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${v}',class extends AudioWorkletProcessor{process(){return !1}})`,P=new Blob([E],{type:"application/javascript; charset=utf-8"}),R=URL.createObjectURL(P);return S.audioWorklet.addModule(R,_).then(()=>{if(a(S))return S;const V=o(S);return V.audioWorklet.addModule(R,_).then(()=>V)}).then(V=>{if(c===null)throw new SyntaxError;try{new c(V,`__sac${v}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(R))});return x===void 0?u.set(d,new Map([[m,k]])):x.set(m,k),k.then(()=>{const g=l.get(d);g===void 0?l.set(d,new Set([m])):g.add(m)}).finally(()=>{const g=u.get(d);g!==void 0&&g.delete(m)}),k}},Pt=(n,t)=>{const e=n.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},rn=(n,t)=>{const e=Array.from(n).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[s]=e;return n.delete(s),s},Ui=(n,t,e,s)=>{const i=Pt(n,t),r=rn(i,o=>o[0]===e&&o[1]===s);return i.size===0&&n.delete(t),r},hs=n=>Pt(ji,n),We=n=>{if(qe.has(n))throw new Error("The AudioNode is already stored.");qe.add(n),hs(n).forEach(t=>t(!0))},Gi=n=>"port"in n,ds=n=>{if(!qe.has(n))throw new Error("The AudioNode is not stored.");qe.delete(n),hs(n).forEach(t=>t(!1))},kn=(n,t)=>{!Gi(n)&&t.every(e=>e.size===0)&&ds(n)},ao=(n,t,e,s,i,r,o,a,c,u,l,h,p)=>{const f=new WeakMap;return(d,m,_,y,x)=>{const{activeInputs:S,passiveInputs:k}=r(m),{outputs:g}=r(d),w=a(d),T=v=>{const O=c(m),N=c(d);if(v){const A=Ui(k,d,_,y);n(S,d,A,!1),!x&&!h(d)&&e(N,O,_,y),p(m)&&We(m)}else{const A=s(S,d,_,y);t(k,y,A,!1),!x&&!h(d)&&i(N,O,_,y);const C=o(m);if(C===0)l(m)&&kn(m,S);else{const M=f.get(m);M!==void 0&&clearTimeout(M),f.set(m,setTimeout(()=>{l(m)&&kn(m,S)},C*1e3))}}};return u(g,[m,_,y],v=>v[0]===m&&v[1]===_&&v[2]===y,!0)?(w.add(T),l(d)?n(S,d,[_,y,T],!0):t(k,y,[d,_,T],!0),!0):!1}},co=n=>(t,e,[s,i,r],o)=>{const a=t.get(s);a===void 0?t.set(s,new Set([[i,e,r]])):n(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},uo=n=>(t,e)=>{const s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(s).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(s),s.disconnect()};e.addEventListener("ended",i)},lo=n=>(t,e)=>{n(t).add(e)},ho={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},po=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=i(a),l={...ho,...c},h=s(u,l),p=r(u)?t():null;super(a,!1,h,p),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},gt=(n,t)=>n.context===t,fo=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=n(o,u)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ds=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Ut=()=>new DOMException("","IndexSizeError"),Bn=n=>{n.getChannelData=(t=>e=>{try{return t.call(n,e)}catch(s){throw s.code===12?Ut():s}})(n.getChannelData)},mo={numberOfChannels:1},_o=(n,t,e,s,i,r,o,a)=>{let c=null;return class zi{constructor(l){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:p,sampleRate:f}={...mo,...l};c===null&&(c=new i(1,1,44100));const d=s!==null&&t(r,r)?new s({length:h,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,h,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(o(d),Bn(d)):t(Ds,()=>Ds(d))||a(d),n.add(d),d}static[Symbol.hasInstance](l){return l!==null&&typeof l=="object"&&Object.getPrototypeOf(l)===zi.prototype||n.has(l)}}},xt=-34028234663852886e22,vt=-xt,Xt=n=>qe.has(n),go={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},yo=(n,t,e,s,i,r,o,a)=>class extends n{constructor(u,l){const h=r(u),p={...go,...l},f=i(h,p),d=o(h),m=d?t():null;super(u,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,vt,xt)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const l=typeof u=="function"?a(this,u):null;this._nativeAudioBufferSourceNode.onended=l;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===l?u:h}get playbackRate(){return this._playbackRate}start(u=0,l=0,h){if(this._nativeAudioBufferSourceNode.start(u,l,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[u,l]:[u,l,h]),this.context.state!=="closed"){We(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),Xt(this)&&ds(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},vo=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=gt(h,l);if(!p){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=t(l,f),o!==null&&h.start(...o),a!==null&&h.stop(a)}return r.set(l,h),p?await n(l,u.playbackRate,h.playbackRate):await s(l,u.playbackRate,h.playbackRate),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},wo=n=>"playbackRate"in n,To=n=>"frequency"in n&&"gain"in n,bo=n=>"offset"in n,xo=n=>!("frequency"in n)&&"gain"in n,So=n=>"detune"in n&&"frequency"in n,Co=n=>"pan"in n,wt=n=>Pt(Wi,n),ps=n=>Pt(Li,n),An=(n,t)=>{const{activeInputs:e}=wt(n);e.forEach(i=>i.forEach(([r])=>{t.includes(n)||An(r,[...t,n])}));const s=wo(n)?[n.playbackRate]:Gi(n)?Array.from(n.parameters.values()):To(n)?[n.Q,n.detune,n.frequency,n.gain]:bo(n)?[n.offset]:xo(n)?[n.gain]:So(n)?[n.detune,n.frequency]:Co(n)?[n.pan]:[];for(const i of s){const r=ps(i);r!==void 0&&r.activeInputs.forEach(([o])=>An(o,t))}Xt(n)&&ds(n)},$i=n=>{An(n.destination,[])},ko=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),Ao=(n,t,e,s,i,r,o,a,c)=>class extends n{constructor(l={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(l)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(h===null)throw s();if(!ko(l.latencyHint))throw new TypeError(`The provided value '${l.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(l.sampleRate!==void 0&&h.sampleRate!==l.sampleRate)throw e();super(h,2);const{latencyHint:p}=l,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",d)};h.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),$i(this)}))}createMediaElementSource(l){return new i(this,{mediaElement:l})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(l){return new o(this,{mediaStream:l})}createMediaStreamTrackSource(l){return new a(this,{mediaStreamTrack:l})}resume(){return this._state==="suspended"?new Promise((l,h)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?l():this.resume().then(l,h)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(l=>{throw l===void 0||l.code===15?t():l})}suspend(){return this._nativeAudioContext.suspend().catch(l=>{throw l===void 0?t():l})}},No=(n,t,e,s,i,r,o,a)=>class extends n{constructor(u,l){const h=r(u),p=o(h),f=i(h,l,p),d=p?t(a):null;super(u,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Oo=n=>{const t=new WeakMap,e=async(s,i)=>{const r=i.destination;return t.set(i,r),await n(s,i,r),r};return{render(s,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(s,i)}}},Do=(n,t,e,s,i,r,o,a)=>(c,u)=>{const l=u.listener,h=()=>{const g=new Float32Array(1),w=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),T=o(u);let v=!1,O=[0,0,-1,0,1,0],N=[0,0,0];const A=()=>{if(v)return;v=!0;const P=s(u,256,9,0);P.onaudioprocess=({inputBuffer:R})=>{const V=[r(R,g,0),r(R,g,1),r(R,g,2),r(R,g,3),r(R,g,4),r(R,g,5)];V.some((q,B)=>q!==O[B])&&(l.setOrientation(...V),O=V);const G=[r(R,g,6),r(R,g,7),r(R,g,8)];G.some((q,B)=>q!==N[B])&&(l.setPosition(...G),N=G)},w.connect(P)},C=P=>R=>{R!==O[P]&&(O[P]=R,l.setOrientation(...O))},M=P=>R=>{R!==N[P]&&(N[P]=R,l.setPosition(...N))},E=(P,R,V)=>{const G=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:R});G.connect(w,0,P),G.start(),Object.defineProperty(G.offset,"defaultValue",{get(){return R}});const q=n({context:c},T,G.offset,vt,xt);return a(q,"value",B=>()=>B.call(q),B=>j=>{try{B.call(q,j)}catch(K){if(K.code!==9)throw K}A(),T&&V(j)}),q.cancelAndHoldAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.cancelAndHoldAtTime),q.cancelScheduledValues=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.cancelScheduledValues),q.exponentialRampToValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.exponentialRampToValueAtTime),q.linearRampToValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.linearRampToValueAtTime),q.setTargetAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.setTargetAtTime),q.setValueAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.setValueAtTime),q.setValueCurveAtTime=(B=>T?()=>{throw i()}:(...j)=>{const K=B.apply(q,j);return A(),K})(q.setValueCurveAtTime),q};return{forwardX:E(0,0,C(0)),forwardY:E(1,0,C(1)),forwardZ:E(2,-1,C(2)),positionX:E(6,0,M(0)),positionY:E(7,0,M(1)),positionZ:E(8,0,M(2)),upX:E(3,0,C(3)),upY:E(4,1,C(4)),upZ:E(5,0,C(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:m,positionY:_,positionZ:y,upX:x,upY:S,upZ:k}=l.forwardX===void 0?h():l;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return m},get positionY(){return _},get positionZ(){return y},get upX(){return x},get upY(){return S},get upZ(){return k}}},Es=n=>"context"in n,fs=n=>Es(n[0]),Ne=(n,t,e,s)=>{for(const i of n)if(e(i)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(t),!0},xi=(n,t,[e,s],i)=>{Ne(n,[t,e,s],r=>r[0]===t&&r[1]===e,i)},Si=(n,[t,e,s],i)=>{const r=n.get(t);r===void 0?n.set(t,new Set([[e,s]])):Ne(r,[e,s],o=>o[0]===e,i)},ze=n=>"inputs"in n,Is=(n,t,e,s)=>{if(ze(t)){const i=t.inputs[s];return n.connect(i,e,0),[i,e,0]}return n.connect(t,e,s),[t,e,s]},Zi=(n,t,e)=>{for(const s of n)if(s[0]===t&&s[1]===e)return n.delete(s),s;return null},Eo=(n,t,e)=>rn(n,s=>s[0]===t&&s[1]===e),Xi=(n,t)=>{if(!hs(n).delete(t))throw new Error("Missing the expected event listener.")},Qi=(n,t,e)=>{const s=Pt(n,t),i=rn(s,r=>r[0]===e);return s.size===0&&n.delete(t),i},Ms=(n,t,e,s)=>{ze(t)?n.disconnect(t.inputs[s],e,0):n.disconnect(t,e,s)},st=n=>Pt(Ln,n),Je=n=>Pt(jn,n),we=n=>xn.has(n),ks=n=>!qe.has(n),Ci=(n,t)=>new Promise(e=>{if(t!==null)e(!0);else{const s=n.createScriptProcessor(256,1,1),i=n.createGain(),r=n.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=n.createBufferSource();a.buffer=r,a.loop=!0,a.connect(s).connect(n.destination),a.connect(i),a.disconnect(i),s.onaudioprocess=c=>{const u=c.inputBuffer.getChannelData(0);Array.prototype.some.call(u,l=>l===1)?e(!0):e(!1),a.stop(),s.onaudioprocess=null,a.disconnect(s),s.disconnect(n.destination)},a.start()}}),yn=(n,t)=>{const e=new Map;for(const s of n)for(const i of s){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((s,i)=>t(i,s))},Rs=n=>"context"in n,Io=n=>{const t=new Map;n.connect=(e=>(s,i=0,r=0)=>{const o=Rs(s)?e(s,i,r):e(s,i),a=t.get(s);return a===void 0?t.set(s,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(n.connect.bind(n)),n.disconnect=(e=>(s,i,r)=>{if(e.apply(n),s===void 0)t.clear();else if(typeof s=="number")for(const[o,a]of t){const c=a.filter(u=>u.output!==s);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(s))if(i===void 0)t.delete(s);else{const o=t.get(s);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(s):t.set(s,a)}}for(const[o,a]of t)a.forEach(c=>{Rs(o)?n.connect(o,c.output,c.input):n.connect(o,c.output)})})(n.disconnect)},Mo=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=ps(t),{outputs:o}=wt(n),a=hs(n),c=u=>{const l=st(n),h=Je(t);if(u){const p=Qi(r,n,e);xi(i,n,p,!1),!s&&!we(n)&&l.connect(h,e)}else{const p=Eo(i,n,e);Si(r,p,!1),!s&&!we(n)&&l.disconnect(h,e)}};return Ne(o,[t,e],u=>u[0]===t&&u[1]===e,!0)?(a.add(c),Xt(n)?xi(i,n,[e,c],!0):Si(r,[n,e,c],!0),!0):!1},Ro=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=wt(t),o=Zi(i[s],n,e);return o===null?[Ui(r,n,e,s)[2],!1]:[o[2],!0]},Vo=(n,t,e)=>{const{activeInputs:s,passiveInputs:i}=ps(t),r=Zi(s,n,e);return r===null?[Qi(i,n,e)[1],!1]:[r[2],!0]},Un=(n,t,e,s,i)=>{const[r,o]=Ro(n,e,s,i);if(r!==null&&(Xi(n,r),o&&!t&&!we(n)&&Ms(st(n),st(e),s,i)),Xt(e)){const{activeInputs:a}=wt(e);kn(e,a)}},Gn=(n,t,e,s)=>{const[i,r]=Vo(n,e,s);i!==null&&(Xi(n,i),r&&!t&&!we(n)&&st(n).disconnect(Je(e),s))},Fo=(n,t)=>{const e=wt(n),s=[];for(const i of e.outputs)fs(i)?Un(n,t,...i):Gn(n,t,...i),s.push(i[0]);return e.outputs.clear(),s},Po=(n,t,e)=>{const s=wt(n),i=[];for(const r of s.outputs)r[1]===e&&(fs(r)?Un(n,t,...r):Gn(n,t,...r),i.push(r[0]),s.outputs.delete(r));return i},qo=(n,t,e,s,i)=>{const r=wt(n);return Array.from(r.outputs).filter(o=>o[0]===e&&(s===void 0||o[1]===s)&&(i===void 0||o[2]===i)).map(o=>(fs(o)?Un(n,t,...o):Gn(n,t,...o),r.outputs.delete(o),o[0]))},Wo=(n,t,e,s,i,r,o,a,c,u,l,h,p,f,d,m)=>class extends u{constructor(y,x,S,k){super(S),this._context=y,this._nativeAudioNode=S;const g=l(y);h(g)&&e(Ci,()=>Ci(g,m))!==!0&&Io(S),Ln.set(this,S),ji.set(this,new Set),y.state!=="closed"&&x&&We(this),n(this,k,S)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,x=0,S=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw i();const k=l(this._context),g=d(k);if(p(y)||f(y))throw r();if(Es(y)){const v=st(y);try{const N=Is(this._nativeAudioNode,v,x,S),A=ks(this);(g||A)&&this._nativeAudioNode.disconnect(...N),this.context.state!=="closed"&&!A&&ks(y)&&We(y)}catch(N){throw N.code===12?r():N}if(t(this,y,x,S,g)){const N=c([this],y);yn(N,s(g))}return y}const w=Je(y);if(w.name==="playbackRate"&&w.maxValue===1024)throw o();try{this._nativeAudioNode.connect(w,x),(g||ks(this))&&this._nativeAudioNode.disconnect(w,x)}catch(v){throw v.code===12?r():v}if(Mo(this,y,x,g)){const v=c([this],y);yn(v,s(g))}}disconnect(y,x,S){let k;const g=l(this._context),w=d(g);if(y===void 0)k=Fo(this,w);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw i();k=Po(this,w,y)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||Es(y)&&S!==void 0&&(S<0||S>=y.numberOfInputs))throw i();if(k=qo(this,w,y,x,S),k.length===0)throw r()}for(const T of k){const v=c([this],T);yn(v,a)}}},Lo=(n,t,e,s,i,r,o,a,c,u,l,h,p)=>(f,d,m,_=null,y=null)=>{const x=m.value,S=new Qr(x),k=d?s(S):null,g={get defaultValue(){return x},get maxValue(){return _===null?m.maxValue:_},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(w){m.value=w,g.setValueAtTime(w,f.context.currentTime)},cancelAndHoldAtTime(w){if(typeof m.cancelAndHoldAtTime=="function")k===null&&S.flush(f.context.currentTime),S.add(i(w)),m.cancelAndHoldAtTime(w);else{const T=Array.from(S).pop();k===null&&S.flush(f.context.currentTime),S.add(i(w));const v=Array.from(S).pop();m.cancelScheduledValues(w),T!==v&&v!==void 0&&(v.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(v.value,v.endTime):v.type==="linearRampToValue"?m.linearRampToValueAtTime(v.value,v.endTime):v.type==="setValue"?m.setValueAtTime(v.value,v.startTime):v.type==="setValueCurve"&&m.setValueCurveAtTime(v.values,v.startTime,v.duration))}return g},cancelScheduledValues(w){return k===null&&S.flush(f.context.currentTime),S.add(r(w)),m.cancelScheduledValues(w),g},exponentialRampToValueAtTime(w,T){if(w===0)throw new RangeError;if(!Number.isFinite(T)||T<0)throw new RangeError;const v=f.context.currentTime;return k===null&&S.flush(v),Array.from(S).length===0&&(S.add(u(x,v)),m.setValueAtTime(x,v)),S.add(o(w,T)),m.exponentialRampToValueAtTime(w,T),g},linearRampToValueAtTime(w,T){const v=f.context.currentTime;return k===null&&S.flush(v),Array.from(S).length===0&&(S.add(u(x,v)),m.setValueAtTime(x,v)),S.add(a(w,T)),m.linearRampToValueAtTime(w,T),g},setTargetAtTime(w,T,v){return k===null&&S.flush(f.context.currentTime),S.add(c(w,T,v)),m.setTargetAtTime(w,T,v),g},setValueAtTime(w,T){return k===null&&S.flush(f.context.currentTime),S.add(u(w,T)),m.setValueAtTime(w,T),g},setValueCurveAtTime(w,T,v){const O=w instanceof Float32Array?w:new Float32Array(w);if(h!==null&&h.name==="webkitAudioContext"){const N=T+v,A=f.context.sampleRate,C=Math.ceil(T*A),M=Math.floor(N*A),E=M-C,P=new Float32Array(E);for(let V=0;V<E;V+=1){const G=(O.length-1)/v*((C+V)/A-T),q=Math.floor(G),B=Math.ceil(G);P[V]=q===B?O[q]:(1-(G-q))*O[q]+(1-(B-G))*O[B]}k===null&&S.flush(f.context.currentTime),S.add(l(P,T,v)),m.setValueCurveAtTime(P,T,v);const R=M/A;R<N&&p(g,P[P.length-1],R),p(g,O[O.length-1],N)}else k===null&&S.flush(f.context.currentTime),S.add(l(O,T,v)),m.setValueCurveAtTime(O,T,v);return g}};return e.set(g,m),t.set(g,f),n(g,k),g},jo=n=>({replay(t){for(const e of n)if(e.type==="exponentialRampToValue"){const{endTime:s,value:i}=e;t.exponentialRampToValueAtTime(i,s)}else if(e.type==="linearRampToValue"){const{endTime:s,value:i}=e;t.linearRampToValueAtTime(i,s)}else if(e.type==="setTarget"){const{startTime:s,target:i,timeConstant:r}=e;t.setTargetAtTime(i,s,r)}else if(e.type==="setValue"){const{startTime:s,value:i}=e;t.setValueAtTime(i,s)}else if(e.type==="setValueCurve"){const{duration:s,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,s)}else throw new Error("Can't apply an unknown automation.")}});class Yi{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((s,i)=>t.call(e,s,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const Bo={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Uo=(n,t,e,s,i,r,o,a,c,u,l,h,p,f)=>class extends t{constructor(m,_,y){var x;const S=a(m),k=c(S),g=l({...Bo,...y});p(g);const w=Sn.get(S),T=w==null?void 0:w.get(_),v=k||S.state!=="closed"?S:(x=o(S))!==null&&x!==void 0?x:S,O=i(v,k?null:m.baseLatency,u,_,T,g),N=k?s(_,g,T):null;super(m,!0,O,N);const A=[];O.parameters.forEach((M,E)=>{const P=e(this,k,M);A.push([E,P])}),this._nativeAudioWorkletNode=O,this._onprocessorerror=null,this._parameters=new Yi(A),k&&n(S,this);const{activeInputs:C}=r(this);h(O,C)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const _=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=_;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===_?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Vs(n,t,e,s,i){if(typeof n.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),n.copyFromChannel(t[e],s,i);else{const r=n.getChannelData(s);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const Hi=(n,t,e,s,i)=>{typeof n.copyToChannel=="function"?t[e].byteLength!==0&&n.copyToChannel(t[e],s,i):t[e].byteLength!==0&&n.getChannelData(s).set(t[e],i)},Fs=(n,t)=>{const e=[];for(let s=0;s<n;s+=1){const i=[],r=typeof t=="number"?t:t[s];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},Go=(n,t)=>{const e=Pt(Cn,n),s=st(t);return Pt(e,s)},zo=async(n,t,e,s,i,r,o)=>{const a=t===null?Math.ceil(n.context.length/128)*128:t.length,c=s.channelCount*s.numberOfInputs,u=i.reduce((_,y)=>_+y,0),l=u===0?null:e.createBuffer(u,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const h=wt(n),p=await Go(e,n),f=Fs(s.numberOfInputs,s.channelCount),d=Fs(s.numberOfOutputs,i),m=Array.from(n.parameters.keys()).reduce((_,y)=>({..._,[y]:new Float32Array(128)}),{});for(let _=0;_<a;_+=128){if(s.numberOfInputs>0&&t!==null)for(let y=0;y<s.numberOfInputs;y+=1)for(let x=0;x<s.channelCount;x+=1)Vs(t,f[y],x,x,_);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:y},x)=>{Vs(t,m,y,c+x,_)});for(let y=0;y<s.numberOfInputs;y+=1)for(let x=0;x<i[y];x+=1)d[y][x].byteLength===0&&(d[y][x]=new Float32Array(128));try{const y=f.map((S,k)=>h.activeInputs[k].size===0?[]:S),x=o(_/e.sampleRate,e.sampleRate,()=>p.process(y,d,m));if(l!==null)for(let S=0,k=0;S<s.numberOfOutputs;S+=1){for(let g=0;g<i[S];g+=1)Hi(l,d[S],g,k+g,_);k+=i[S]}if(!x)break}catch(y){n.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return l},$o=(n,t,e,s,i,r,o,a,c,u,l,h,p,f,d,m)=>(_,y,x)=>{const S=new WeakMap;let k=null;const g=async(w,T)=>{let v=l(w),O=null;const N=gt(v,T),A=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const C=A.reduce((R,V)=>R+V,0),M=i(T,{channelCount:Math.max(1,C),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,C)}),E=[];for(let R=0;R<w.numberOfOutputs;R+=1)E.push(s(T,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:A[R]}));const P=o(T,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});P.connect=t.bind(null,E),P.disconnect=c.bind(null,E),O=[M,E,P]}else N||(v=new h(T,_));if(S.set(T,O===null?v:O[2]),O!==null){if(k===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=w.channelCount*w.numberOfInputs,G=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,q=V+G;k=zo(w,q===0?null:await(async()=>{const j=new p(q,Math.ceil(w.context.length/128)*128,T.sampleRate),K=[],kt=[];for(let nt=0;nt<y.numberOfInputs;nt+=1)K.push(o(j,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),kt.push(i(j,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const At=await Promise.all(Array.from(w.parameters.values()).map(async nt=>{const yt=r(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:nt.value});return await f(j,nt,yt.offset),yt})),$=s(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+G)});for(let nt=0;nt<y.numberOfInputs;nt+=1){K[nt].connect(kt[nt]);for(let yt=0;yt<y.channelCount;yt+=1)kt[nt].connect($,yt,nt*y.channelCount+yt)}for(const[nt,yt]of At.entries())yt.connect($,0,V+nt),yt.start(0);return $.connect(j.destination),await Promise.all(K.map(nt=>d(w,j,nt))),m(j)})(),T,y,A,x,u)}const C=await k,M=e(T,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[E,P,R]=O;C!==null&&(M.buffer=C,M.start(0)),M.connect(E);for(let V=0,G=0;V<w.numberOfOutputs;V+=1){const q=P[V];for(let B=0;B<A[V];B+=1)E.connect(q,G+B,B);G+=A[V]}return R}if(N)for(const[C,M]of w.parameters.entries())await n(T,M,v.parameters.get(C));else for(const[C,M]of w.parameters.entries())await f(T,M,v.parameters.get(C));return await d(w,T,v),v};return{render(w,T){a(T,w);const v=S.get(T);return v!==void 0?Promise.resolve(v):g(w,T)}}},Zo=(n,t,e,s,i,r,o,a,c,u,l,h,p,f,d,m,_,y,x,S)=>class extends d{constructor(g,w){super(g,w),this._nativeContext=g,this._audioWorklet=n===void 0?void 0:{addModule:(T,v)=>n(this,T,v)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(g,w,T){return new e({length:w,numberOfChannels:g,sampleRate:T})}createBufferSource(){return new s(this)}createChannelMerger(g=6){return new r(this,{numberOfInputs:g})}createChannelSplitter(g=6){return new o(this,{numberOfOutputs:g})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(g=1){return new l(this,{maxDelayTime:g})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(g,w){return new f(this,{feedback:w,feedforward:g})}createOscillator(){return new m(this)}createPanner(){return new _(this)}createPeriodicWave(g,w,T={disableNormalization:!1}){return new y(this,{...T,imag:w,real:g})}createStereoPanner(){return new x(this)}createWaveShaper(){return new S(this)}decodeAudioData(g,w,T){return u(this._nativeContext,g).then(v=>(typeof w=="function"&&w(v),v),v=>{throw typeof T=="function"&&T(v),v})}},Xo={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Qo=(n,t,e,s,i,r,o,a)=>class extends n{constructor(u,l){const h=r(u),p={...Xo,...l},f=i(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._Q=t(this,d,f.Q,vt,xt),this._detune=t(this,d,f.detune,1200*Math.log2(vt),-1200*Math.log2(vt)),this._frequency=t(this,d,f.frequency,u.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(vt),xt),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,l,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,l,h)}catch(p){throw p.code===11?s():p}if(u.length!==l.length||l.length!==h.length)throw s()}},Yo=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=t(c,h)}return r.set(c,u),l?(await n(c,a.Q,u.Q),await n(c,a.detune,u.detune),await n(c,a.frequency,u.frequency),await n(c,a.gain,u.gain)):(await s(c,a.Q,u.Q),await s(c,a.detune,u.detune),await s(c,a.frequency,u.frequency),await s(c,a.gain,u.gain)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Ho=(n,t)=>(e,s)=>{const i=t.get(e);if(i!==void 0)return i;const r=n.get(e);if(r!==void 0)return r;try{const o=s();return o instanceof Promise?(n.set(e,o),o.catch(()=>!1).then(a=>(n.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},Jo={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Ko=(n,t,e,s,i)=>class extends n{constructor(o,a){const c=s(o),u={...Jo,...a},l=e(c,u),h=i(c)?t():null;super(o,!1,l,h)}},ta=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=n(o,u)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},ea={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},sa=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=s(a),l=r({...ea,...c}),h=e(u,l),p=i(u)?t():null;super(a,!1,h,p)}},na=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=n(o,u)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},ia=n=>(t,e,s)=>n(e,t,s),ra=n=>(t,e,s=0,i=0)=>{const r=t[s];if(r===void 0)throw n();return Rs(e)?r.connect(e,0,i):r.connect(e,0)},oa=n=>(t,e)=>{const s=n(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return s.buffer=i,s.loop=!0,s.connect(e),s.start(),()=>{s.stop(),s.disconnect(e)}},aa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},ca=(n,t,e,s,i,r,o)=>class extends n{constructor(c,u){const l=i(c),h={...aa,...u},p=s(l,h),f=r(l),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,vt,xt),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=u;const l=this._nativeConstantSourceNode.onended;this._onended=l!==null&&l===u?c:l}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){We(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),Xt(this)&&ds(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},ua=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=gt(h,l);if(!p){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=t(l,f),o!==null&&h.start(o),a!==null&&h.stop(a)}return r.set(l,h),p?await n(l,u.offset,h.offset):await s(l,u.offset,h.offset),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},la=n=>t=>(n[0]=t,n[0]),ha={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},da=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=s(a),l={...ha,...c},h=e(u,l),f=i(u)?t():null;super(a,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,l.buffer!==null&&r(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},pa=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=n(o,u)}return s.set(o,a),ze(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},fa=(n,t)=>(e,s,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,s,i)}catch(r){throw r.name==="SyntaxError"?n():r}},ma=()=>new DOMException("","DataCloneError"),ki=n=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(s=>{const i=()=>{e.onmessage=null,t.close(),e.close(),s()};e.onmessage=()=>i();try{t.postMessage(n,[n])}catch{}finally{i()}})},_a=(n,t,e,s,i,r,o,a,c,u,l)=>(h,p)=>{const f=o(h)?h:r(h);if(i.has(p)){const d=e();return Promise.reject(d)}try{i.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(ki(p).catch(()=>{}),t(a,()=>a(d))||l(d),n.add(d),d)):new Promise((d,m)=>{const _=async()=>{try{await ki(p)}catch{}},y=x=>{m(x),_()};try{f.decodeAudioData(p,x=>{typeof x.copyFromChannel!="function"&&(u(x),Bn(x)),n.add(x),_().then(()=>d(x))},x=>{y(x===null?s():x)})}catch(x){y(x)}})},ga=(n,t,e,s,i,r,o,a)=>(c,u)=>{const l=t.get(c);if(l===void 0)throw new Error("Missing the expected cycle count.");const h=r(c.context),p=a(h);if(l===u){if(t.delete(c),!p&&o(c)){const f=s(c),{outputs:d}=e(c);for(const m of d)if(fs(m)){const _=s(m[0]);n(f,_,m[1],m[2])}else{const _=i(m[0]);f.connect(_,m[1])}}}else t.set(c,l-u)},ya={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},va=(n,t,e,s,i,r,o)=>class extends n{constructor(c,u){const l=i(c),h={...ya,...u},p=s(l,h),f=r(l),d=f?e(h.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},wa=(n,t,e,s,i)=>r=>{const o=new WeakMap,a=async(c,u)=>{let l=e(c);const h=gt(l,u);if(!h){const p={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,delayTime:l.delayTime.value,maxDelayTime:r};l=t(u,p)}return o.set(u,l),h?await n(u,c.delayTime,l.delayTime):await s(u,c.delayTime,l.delayTime),await i(c,u,l),l};return{render(c,u){const l=o.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},Ta=n=>(t,e,s,i)=>n(t[i],r=>r[0]===e&&r[1]===s),ba=n=>(t,e)=>{n(t).delete(e)},xa=n=>"delayTime"in n,Sa=(n,t,e)=>function s(i,r){const o=Es(r)?r:e(n,r);if(xa(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>s([...i,o],c[0])).reduce((c,u)=>c.concat(u),[])},xs=(n,t,e)=>{const s=t[e];if(s===void 0)throw n();return s},Ca=n=>(t,e=void 0,s=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?xs(n,t,e).disconnect():Rs(e)?s===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?xs(n,t,s).disconnect(e,0):xs(n,t,s).disconnect(e,0,i):s===void 0?t.forEach(r=>r.disconnect(e)):xs(n,t,s).disconnect(e,0),ka={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Aa=(n,t,e,s,i,r,o,a)=>class extends n{constructor(u,l){const h=r(u),p={...ka,...l},f=s(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const l=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=l,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const l=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=l,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Na=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=t(c,h)}return r.set(c,u),l?(await n(c,a.attack,u.attack),await n(c,a.knee,u.knee),await n(c,a.ratio,u.ratio),await n(c,a.release,u.release),await n(c,a.threshold,u.threshold)):(await s(c,a.attack,u.attack),await s(c,a.knee,u.knee),await s(c,a.ratio,u.ratio),await s(c,a.release,u.release),await s(c,a.threshold,u.threshold)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Oa=()=>new DOMException("","EncodingError"),Da=n=>t=>new Promise((e,s)=>{if(n===null){s(new SyntaxError);return}const i=n.document.head;if(i===null)s(new SyntaxError);else{const r=n.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=n.onerror,u=()=>{n.onerror=c,URL.revokeObjectURL(a)};n.onerror=(l,h,p,f,d)=>{if(h===a||h===n.location.href&&p===1&&f===1)return u(),s(d),!1;if(c!==null)return c(l,h,p,f,d)},r.onerror=()=>{u(),s(new SyntaxError)},r.onload=()=>{u(),e()},r.src=a,r.type="module",i.appendChild(r)}}),Ea=n=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,s,i){if(s!==null){let r=this._listeners.get(s);r===void 0&&(r=n(this,s),typeof s=="function"&&this._listeners.set(s,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,s,i){const r=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},Ia=n=>(t,e,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},Ma=n=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw n()},Ra={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Va=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=i(a),l={...Ra,...c},h=s(u,l),p=r(u),f=p?e():null;super(a,!1,h,f),this._gain=t(this,p,h.gain,vt,xt)}get gain(){return this._gain}},Fa=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=t(c,h)}return r.set(c,u),l?await n(c,a.gain,u.gain):await s(c,a.gain,u.gain),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Pa=(n,t)=>e=>t(n,e),qa=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},Wa=n=>t=>{var e;return(e=n.get(t))!==null&&e!==void 0?e:0},La=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},ja=n=>t=>n.get(t),mt=()=>new DOMException("","InvalidStateError"),Ba=n=>t=>{const e=n.get(t);if(e===void 0)throw mt();return e},Ua=(n,t)=>e=>{let s=n.get(e);if(s!==void 0)return s;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new t(1,1,44100),n.set(e,s),s},Ga=n=>t=>{const e=n.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},on=()=>new DOMException("","InvalidAccessError"),za=n=>{n.getFrequencyResponse=(t=>(e,s,i)=>{if(e.length!==s.length||s.length!==i.length)throw on();return t.call(n,e,s,i)})(n.getFrequencyResponse)},$a={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},Za=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=s(a),l=i(u),h={...$a,...c},p=t(u,l?null:a.baseLatency,h),f=l?e(h.feedback,h.feedforward):null;super(a,!1,p,f),za(p),this._nativeIIRFilterNode=p,r(this,1)}getFrequencyResponse(a,c,u){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,u)}},Ji=(n,t,e,s,i,r,o,a,c,u,l)=>{const h=u.length;let p=a;for(let f=0;f<h;f+=1){let d=e[0]*u[f];for(let m=1;m<i;m+=1){const _=p-m&c-1;d+=e[m]*r[_],d-=n[m]*o[_]}for(let m=i;m<s;m+=1)d+=e[m]*r[p-m&c-1];for(let m=i;m<t;m+=1)d-=n[m]*o[p-m&c-1];r[p]=u[f],o[p]=d,p=p+1&c-1,l[f]=d}return p},Xa=(n,t,e,s)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=s instanceof Float64Array?s:new Float64Array(s),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let d=0;d<o;d+=1)r[d]/=i[0];for(let d=1;d<a;d+=1)i[d]/=i[0]}const u=32,l=new Float32Array(u),h=new Float32Array(u),p=t.createBuffer(n.numberOfChannels,n.length,n.sampleRate),f=n.numberOfChannels;for(let d=0;d<f;d+=1){const m=n.getChannelData(d),_=p.getChannelData(d);l.fill(0),h.fill(0),Ji(i,o,r,a,c,l,h,0,u,m,_)}return p},Qa=(n,t,e,s,i)=>(r,o)=>{const a=new WeakMap;let c=null;const u=async(l,h)=>{let p=null,f=t(l);const d=gt(f,h);if(h.createIIRFilter===void 0?p=n(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=h.createIIRFilter(o,r)),a.set(h,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _=new e(l.context.destination.channelCount,l.context.length,h.sampleRate);c=(async()=>{await s(l,_,_.destination);const y=await i(_);return Xa(y,h,r,o)})()}const m=await c;return p.buffer=m,p.start(0),p}return await s(l,h,f),f};return{render(l,h){const p=a.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},Ya=(n,t,e,s,i,r)=>o=>(a,c)=>{const u=n.get(a);if(u===void 0){if(!o&&r(a)){const l=s(a),{outputs:h}=e(a);for(const p of h)if(fs(p)){const f=s(p[0]);t(l,f,p[1],p[2])}else{const f=i(p[0]);l.disconnect(f,p[1])}}n.set(a,c)}else n.set(a,u+c)},Ha=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},Ja=(n,t)=>e=>n.has(e)||t(e),Ka=(n,t)=>e=>n.has(e)||t(e),tc=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},ec=n=>t=>n!==null&&t instanceof n,sc=n=>t=>n!==null&&typeof n.AudioNode=="function"&&t instanceof n.AudioNode,nc=n=>t=>n!==null&&typeof n.AudioParam=="function"&&t instanceof n.AudioParam,ic=(n,t)=>e=>n(e)||t(e),rc=n=>t=>n!==null&&t instanceof n,oc=n=>n!==null&&n.isSecureContext,ac=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},cc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},uc=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r);if(s(a))throw new TypeError;const c={...cc,...o},u=t(a,c);super(r,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},lc=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},hc=(n,t,e)=>class extends n{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},dc=(n,t,e,s,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,nn.set(this,a),s(a)&&i.set(a,new Set),this._destination=new n(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===c?a:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Ke=n=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=n.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},pc=(n,t)=>(e,s,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,u=0)=>{const l=r.size===0;if(t(a))return o.call(e,a,c,u),n(r,[a,c,u],h=>h[0]===a&&h[1]===c&&h[2]===u,!0),l&&s(),a;o.call(e,a,c),n(r,[a,c],h=>h[0]===a&&h[1]===c,!0),l&&s()})(e.connect),e.disconnect=(o=>(a,c,u)=>{const l=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const p of r)p[1]===a&&r.delete(p)}else{t(a)?o.call(e,a,c,u):o.call(e,a,c);for(const p of r)p[0]===a&&(c===void 0||p[1]===c)&&(u===void 0||p[2]===u)&&r.delete(p)}const h=r.size===0;l&&h&&i()})(e.disconnect),e},it=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e]&&(n[e]=s)},ft=(n,t)=>{it(n,t,"channelCount"),it(n,t,"channelCountMode"),it(n,t,"channelInterpretation")},Ai=n=>typeof n.getFloatTimeDomainData=="function",fc=n=>{n.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);n.getByteTimeDomainData(e);const s=Math.max(e.length,n.fftSize);for(let i=0;i<s;i+=1)t[i]=(e[i]-128)*.0078125;return t}},mc=(n,t)=>(e,s)=>{const i=e.createAnalyser();if(ft(i,s),!(s.maxDecibels>s.minDecibels))throw t();return it(i,s,"fftSize"),it(i,s,"maxDecibels"),it(i,s,"minDecibels"),it(i,s,"smoothingTimeConstant"),n(Ai,()=>Ai(i))||fc(i),i},_c=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,ct=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e].value&&(n[e].value=s)},gc=n=>{n.start=(t=>{let e=!1;return(s=0,i=0,r)=>{if(e)throw mt();t.call(n,s,i,r),e=!0}})(n.start)},zn=n=>{n.start=(t=>(e=0,s=0,i)=>{if(typeof i=="number"&&i<0||s<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(n,e,s,i)})(n.start)},$n=n=>{n.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(n,e)})(n.stop)},yc=(n,t,e,s,i,r,o,a,c,u,l)=>(h,p)=>{const f=h.createBufferSource();return ft(f,p),ct(f,p,"playbackRate"),it(f,p,"buffer"),it(f,p,"loop"),it(f,p,"loopEnd"),it(f,p,"loopStart"),t(e,()=>e(h))||gc(f),t(s,()=>s(h))||c(f),t(i,()=>i(h))||u(f,h),t(r,()=>r(h))||zn(f),t(o,()=>o(h))||l(f,h),t(a,()=>a(h))||$n(f),n(h,f),f},vc=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,wc=(n,t)=>(e,s,i)=>{const r=e.destination;if(r.channelCount!==s)try{r.channelCount=s}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:s});const o=n(e,{channelCount:s,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(u){if(c>r.maxChannelCount)throw u}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},Tc=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,bc=n=>{const{port1:t}=new MessageChannel;try{t.postMessage(n)}finally{t.close()}},xc=(n,t,e,s,i)=>(r,o,a,c,u,l)=>{if(a!==null)try{const h=new a(r,c,l),p=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>l.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(_!==null){const y=p.get(m[1]);y!==void 0?m[1]=y:(m[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),_(x)):_(new ErrorEvent(m[0],{...x}))},p.set(_,m[1]))}}return d.call(h,"error",m[1],m[2]),d.call(h,...m)})(h.addEventListener),h.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=p.get(m[1]);_!==void 0&&(p.delete(m[1]),m[1]=_)}return d.call(h,"error",m[1],m[2]),d.call(h,m[0],m[1],m[2])})(h.removeEventListener),l.numberOfOutputs!==0){const d=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(d).connect(r.destination),i(h,()=>d.disconnect(),()=>d.connect(r.destination))}return h}catch(h){throw h.code===11?s():h}if(u===void 0)throw s();return bc(l),t(r,o,u,l)},Ki=(n,t)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*t))))),Sc=n=>new Promise((t,e)=>{const{port1:s,port2:i}=new MessageChannel;s.onmessage=({data:r})=>{s.close(),i.close(),t(r)},s.onmessageerror=({data:r})=>{s.close(),i.close(),e(r)},i.postMessage(n)}),Cc=async(n,t)=>{const e=await Sc(t);return new n(e)},kc=(n,t,e,s)=>{let i=Cn.get(n);i===void 0&&(i=new WeakMap,Cn.set(n,i));const r=Cc(e,s);return i.set(t,r),r},Ac=(n,t,e,s,i,r,o,a,c,u,l,h,p)=>(f,d,m,_)=>{if(_.numberOfInputs===0&&_.numberOfOutputs===0)throw c();const y=Array.isArray(_.outputChannelCount)?_.outputChannelCount:Array.from(_.outputChannelCount);if(y.some(D=>D<1))throw c();if(y.length!==_.numberOfOutputs)throw t();if(_.channelCountMode!=="explicit")throw c();const x=_.channelCount*_.numberOfInputs,S=y.reduce((D,W)=>D+W,0),k=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(x+k>6||S>6)throw c();const g=new MessageChannel,w=[],T=[];for(let D=0;D<_.numberOfInputs;D+=1)w.push(o(f,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1})),T.push(i(f,{channelCount:_.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:_.channelCount}));const v=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:D,maxValue:W,minValue:pt,name:rt}of m.parameterDescriptors){const H=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:_.parameterData[rt]!==void 0?_.parameterData[rt]:D===void 0?0:D});Object.defineProperties(H.offset,{defaultValue:{get:()=>D===void 0?0:D},maxValue:{get:()=>W===void 0?vt:W},minValue:{get:()=>pt===void 0?xt:pt}}),v.push(H)}const O=s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+k)}),N=Ki(d,f.sampleRate),A=a(f,N,x+k,Math.max(1,S)),C=i(f,{channelCount:Math.max(1,S),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,S)}),M=[];for(let D=0;D<_.numberOfOutputs;D+=1)M.push(s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[D]}));for(let D=0;D<_.numberOfInputs;D+=1){w[D].connect(T[D]);for(let W=0;W<_.channelCount;W+=1)T[D].connect(O,W,D*_.channelCount+W)}const E=new Yi(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:D},W)=>{const pt=v[W];return pt.connect(O,0,x+W),pt.start(0),[D,pt.offset]}));O.connect(A);let P=_.channelInterpretation,R=null;const V=_.numberOfOutputs===0?[A]:M,G={get bufferSize(){return N},get channelCount(){return _.channelCount},set channelCount(D){throw e()},get channelCountMode(){return _.channelCountMode},set channelCountMode(D){throw e()},get channelInterpretation(){return P},set channelInterpretation(D){for(const W of w)W.channelInterpretation=D;P=D},get context(){return A.context},get inputs(){return w},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get onprocessorerror(){return R},set onprocessorerror(D){typeof R=="function"&&G.removeEventListener("processorerror",R),R=typeof D=="function"?D:null,typeof R=="function"&&G.addEventListener("processorerror",R)},get parameters(){return E},get port(){return g.port2},addEventListener(...D){return A.addEventListener(D[0],D[1],D[2])},connect:n.bind(null,V),disconnect:u.bind(null,V),dispatchEvent(...D){return A.dispatchEvent(D[0])},removeEventListener(...D){return A.removeEventListener(D[0],D[1],D[2])}},q=new Map;g.port1.addEventListener=(D=>(...W)=>{if(W[0]==="message"){const pt=typeof W[1]=="function"?W[1]:typeof W[1]=="object"&&W[1]!==null&&typeof W[1].handleEvent=="function"?W[1].handleEvent:null;if(pt!==null){const rt=q.get(W[1]);rt!==void 0?W[1]=rt:(W[1]=H=>{l(f.currentTime,f.sampleRate,()=>pt(H))},q.set(pt,W[1]))}}return D.call(g.port1,W[0],W[1],W[2])})(g.port1.addEventListener),g.port1.removeEventListener=(D=>(...W)=>{if(W[0]==="message"){const pt=q.get(W[1]);pt!==void 0&&(q.delete(W[1]),W[1]=pt)}return D.call(g.port1,W[0],W[1],W[2])})(g.port1.removeEventListener);let B=null;Object.defineProperty(g.port1,"onmessage",{get:()=>B,set:D=>{typeof B=="function"&&g.port1.removeEventListener("message",B),B=typeof D=="function"?D:null,typeof B=="function"&&(g.port1.addEventListener("message",B),g.port1.start())}}),m.prototype.port=g.port1;let j=null;kc(f,G,m,_).then(D=>j=D);const kt=Fs(_.numberOfInputs,_.channelCount),At=Fs(_.numberOfOutputs,y),$=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((D,{name:W})=>({...D,[W]:new Float32Array(128)}),{});let nt=!0;const yt=()=>{_.numberOfOutputs>0&&A.disconnect(C);for(let D=0,W=0;D<_.numberOfOutputs;D+=1){const pt=M[D];for(let rt=0;rt<y[D];rt+=1)C.disconnect(pt,W+rt,rt);W+=y[D]}},F=new Map;A.onaudioprocess=({inputBuffer:D,outputBuffer:W})=>{if(j!==null){const pt=h(G);for(let rt=0;rt<N;rt+=128){for(let H=0;H<_.numberOfInputs;H+=1)for(let at=0;at<_.channelCount;at+=1)Vs(D,kt[H],at,at,rt);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:H},at)=>{Vs(D,$,H,x+at,rt)});for(let H=0;H<_.numberOfInputs;H+=1)for(let at=0;at<y[H];at+=1)At[H][at].byteLength===0&&(At[H][at]=new Float32Array(128));try{const H=kt.map((Nt,ne)=>{if(pt[ne].size>0)return F.set(ne,N/128),Nt;const gn=F.get(ne);return gn===void 0?[]:(Nt.every(zr=>zr.every($r=>$r===0))&&(gn===1?F.delete(ne):F.set(ne,gn-1)),Nt)});nt=l(f.currentTime+rt/f.sampleRate,f.sampleRate,()=>j.process(H,At,$));for(let Nt=0,ne=0;Nt<_.numberOfOutputs;Nt+=1){for(let Ye=0;Ye<y[Nt];Ye+=1)Hi(W,At[Nt],Ye,ne+Ye,rt);ne+=y[Nt]}}catch(H){nt=!1,G.dispatchEvent(new ErrorEvent("processorerror",{colno:H.colno,filename:H.filename,lineno:H.lineno,message:H.message}))}if(!nt){for(let H=0;H<_.numberOfInputs;H+=1){w[H].disconnect(T[H]);for(let at=0;at<_.channelCount;at+=1)T[rt].disconnect(O,at,H*_.channelCount+at)}if(m.parameterDescriptors!==void 0){const H=m.parameterDescriptors.length;for(let at=0;at<H;at+=1){const Nt=v[at];Nt.disconnect(O,0,x+at),Nt.stop()}}O.disconnect(A),A.onaudioprocess=null,de?yt():Ie();break}}}};let de=!1;const pe=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Ee=()=>A.connect(pe).connect(f.destination),Ie=()=>{A.disconnect(pe),pe.disconnect()},Ur=()=>{if(nt){Ie(),_.numberOfOutputs>0&&A.connect(C);for(let D=0,W=0;D<_.numberOfOutputs;D+=1){const pt=M[D];for(let rt=0;rt<y[D];rt+=1)C.connect(pt,W+rt,rt);W+=y[D]}}de=!0},Gr=()=>{nt&&(Ee(),yt()),de=!1};return Ee(),p(G,Ur,Gr)},tr=(n,t)=>{const e=n.createBiquadFilter();return ft(e,t),ct(e,t,"Q"),ct(e,t,"detune"),ct(e,t,"frequency"),ct(e,t,"gain"),it(e,t,"type"),e},Nc=(n,t)=>(e,s)=>{const i=e.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&t(e,i),ft(i,s),i},Oc=n=>{const t=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw mt()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw mt()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw mt()}})},ms=(n,t)=>{const e=n.createChannelSplitter(t.numberOfOutputs);return ft(e,t),Oc(e),e},Dc=(n,t,e,s,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return ft(a,o),ct(a,o,"offset"),t(s,()=>s(r))||zn(a),t(i,()=>i(r))||$n(a),n(r,a),a},$e=(n,t)=>(n.connect=t.connect.bind(t),n.disconnect=t.disconnect.bind(t),n),Ec=(n,t,e,s)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=e(i,{...o,gain:r}),l=a.getChannelData(0);l[0]=1,l[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(d){u.channelCount=d},get channelCountMode(){return u.channelCountMode},set channelCountMode(d){u.channelCountMode=d},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(d){u.channelInterpretation=d},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(u),f=()=>c.disconnect(u);return n(i,c),s($e(h,u),p,f)},Ic=(n,t)=>(e,s)=>{const i=e.createConvolver();if(ft(i,s),s.disableNormalization===i.normalize&&(i.normalize=!s.disableNormalization),it(i,s,"buffer"),s.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw n();return r.call(i,o)}),s.channelCountMode==="max"))throw n();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw n();return r.call(i,o)}),i},er=(n,t)=>{const e=n.createDelay(t.maxDelayTime);return ft(e,t),ct(e,t,"delayTime"),e},Mc=n=>(t,e)=>{const s=t.createDynamicsCompressor();if(ft(s,e),e.channelCount>2||e.channelCountMode==="max")throw n();return ct(s,e,"attack"),ct(s,e,"knee"),ct(s,e,"ratio"),ct(s,e,"release"),ct(s,e,"threshold"),s},Ct=(n,t)=>{const e=n.createGain();return ft(e,t),ct(e,t,"gain"),e},Rc=n=>(t,e,s)=>{if(t.createIIRFilter===void 0)return n(t,e,s);const i=t.createIIRFilter(s.feedforward,s.feedback);return ft(i,s),i};function Vc(n,t){const e=t[0]*t[0]+t[1]*t[1];return[(n[0]*t[0]+n[1]*t[1])/e,(n[1]*t[0]-n[0]*t[1])/e]}function Fc(n,t){return[n[0]*t[0]-n[1]*t[1],n[0]*t[1]+n[1]*t[0]]}function Ni(n,t){let e=[0,0];for(let s=n.length-1;s>=0;s-=1)e=Fc(e,t),e[0]+=n[s];return e}const Pc=(n,t,e,s)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:u,feedforward:l})=>{const h=Ki(r,i.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),f=l instanceof Float64Array?l:new Float64Array(l),d=p.length,m=f.length,_=Math.min(d,m);if(d===0||d>20)throw s();if(p[0]===0)throw t();if(m===0||m>20)throw s();if(f[0]===0)throw t();if(p[0]!==1){for(let v=0;v<m;v+=1)f[v]/=p[0];for(let v=1;v<d;v+=1)p[v]/=p[0]}const y=e(i,h,o,o);y.channelCount=o,y.channelCountMode=a,y.channelInterpretation=c;const x=32,S=[],k=[],g=[];for(let v=0;v<o;v+=1){S.push(0);const O=new Float32Array(x),N=new Float32Array(x);O.fill(0),N.fill(0),k.push(O),g.push(N)}y.onaudioprocess=v=>{const O=v.inputBuffer,N=v.outputBuffer,A=O.numberOfChannels;for(let C=0;C<A;C+=1){const M=O.getChannelData(C),E=N.getChannelData(C);S[C]=Ji(p,d,f,m,_,k[C],g[C],S[C],x,M,E)}};const w=i.sampleRate/2;return $e({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(v){y.channelCount=v},get channelCountMode(){return y.channelCountMode},set channelCountMode(v){y.channelCountMode=v},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(v){y.channelInterpretation=v},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...v){return y.addEventListener(v[0],v[1],v[2])},dispatchEvent(...v){return y.dispatchEvent(v[0])},getFrequencyResponse(v,O,N){if(v.length!==O.length||O.length!==N.length)throw n();const A=v.length;for(let C=0;C<A;C+=1){const M=-Math.PI*(v[C]/w),E=[Math.cos(M),Math.sin(M)],P=Ni(f,E),R=Ni(p,E),V=Vc(P,R);O[C]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),N[C]=Math.atan2(V[1],V[0])}},removeEventListener(...v){return y.removeEventListener(v[0],v[1],v[2])}},y)},qc=(n,t)=>n.createMediaElementSource(t.mediaElement),Wc=(n,t)=>{const e=n.createMediaStreamDestination();return ft(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},Lc=(n,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const s=e.slice(0,1),i=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(i,"mediaStream",{value:t}),i},jc=(n,t)=>(e,{mediaStreamTrack:s})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(s);const i=new MediaStream([s]),r=e.createMediaStreamSource(i);if(s.kind!=="audio")throw n();if(t(e))throw new TypeError;return r},Bc=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,Uc=(n,t,e,s,i,r)=>(o,a)=>{const c=o.createOscillator();return ft(c,a),ct(c,a,"detune"),ct(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):it(c,a,"type"),t(e,()=>e(o))||zn(c),t(s,()=>s(o))||r(c,o),t(i,()=>i(o))||$n(c),n(o,c),c},Gc=n=>(t,e)=>{const s=t.createPanner();return s.orientationX===void 0?n(t,e):(ft(s,e),ct(s,e,"orientationX"),ct(s,e,"orientationY"),ct(s,e,"orientationZ"),ct(s,e,"positionX"),ct(s,e,"positionY"),ct(s,e,"positionZ"),it(s,e,"coneInnerAngle"),it(s,e,"coneOuterAngle"),it(s,e,"coneOuterGain"),it(s,e,"distanceModel"),it(s,e,"maxDistance"),it(s,e,"panningModel"),it(s,e,"refDistance"),it(s,e,"rolloffFactor"),s)},zc=(n,t,e,s,i,r,o,a,c,u)=>(l,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:m,orientationX:_,orientationY:y,orientationZ:x,panningModel:S,positionX:k,positionY:g,positionZ:w,refDistance:T,rolloffFactor:v,...O})=>{const N=l.createPanner();if(O.channelCount>2||O.channelCountMode==="max")throw o();ft(N,O);const A={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},C=e(l,{...A,channelInterpretation:"speakers",numberOfInputs:6}),M=s(l,{...O,gain:1}),E=s(l,{...A,gain:1}),P=s(l,{...A,gain:0}),R=s(l,{...A,gain:0}),V=s(l,{...A,gain:0}),G=s(l,{...A,gain:0}),q=s(l,{...A,gain:0}),B=i(l,256,6,1),j=r(l,{...A,curve:new Float32Array([1,1]),oversample:"none"});let K=[_,y,x],kt=[k,g,w];const At=new Float32Array(1);B.onaudioprocess=({inputBuffer:F})=>{const de=[c(F,At,0),c(F,At,1),c(F,At,2)];de.some((Ee,Ie)=>Ee!==K[Ie])&&(N.setOrientation(...de),K=de);const pe=[c(F,At,3),c(F,At,4),c(F,At,5)];pe.some((Ee,Ie)=>Ee!==kt[Ie])&&(N.setPosition(...pe),kt=pe)},Object.defineProperty(P.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(G.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0});const $={get bufferSize(){},get channelCount(){return N.channelCount},set channelCount(F){if(F>2)throw o();M.channelCount=F,N.channelCount=F},get channelCountMode(){return N.channelCountMode},set channelCountMode(F){if(F==="max")throw o();M.channelCountMode=F,N.channelCountMode=F},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(F){M.channelInterpretation=F,N.channelInterpretation=F},get coneInnerAngle(){return N.coneInnerAngle},set coneInnerAngle(F){N.coneInnerAngle=F},get coneOuterAngle(){return N.coneOuterAngle},set coneOuterAngle(F){N.coneOuterAngle=F},get coneOuterGain(){return N.coneOuterGain},set coneOuterGain(F){if(F<0||F>1)throw t();N.coneOuterGain=F},get context(){return N.context},get distanceModel(){return N.distanceModel},set distanceModel(F){N.distanceModel=F},get inputs(){return[M]},get maxDistance(){return N.maxDistance},set maxDistance(F){if(F<0)throw new RangeError;N.maxDistance=F},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},get orientationX(){return E.gain},get orientationY(){return P.gain},get orientationZ(){return R.gain},get panningModel(){return N.panningModel},set panningModel(F){N.panningModel=F},get positionX(){return V.gain},get positionY(){return G.gain},get positionZ(){return q.gain},get refDistance(){return N.refDistance},set refDistance(F){if(F<0)throw new RangeError;N.refDistance=F},get rolloffFactor(){return N.rolloffFactor},set rolloffFactor(F){if(F<0)throw new RangeError;N.rolloffFactor=F},addEventListener(...F){return M.addEventListener(F[0],F[1],F[2])},dispatchEvent(...F){return M.dispatchEvent(F[0])},removeEventListener(...F){return M.removeEventListener(F[0],F[1],F[2])}};h!==$.coneInnerAngle&&($.coneInnerAngle=h),p!==$.coneOuterAngle&&($.coneOuterAngle=p),f!==$.coneOuterGain&&($.coneOuterGain=f),d!==$.distanceModel&&($.distanceModel=d),m!==$.maxDistance&&($.maxDistance=m),_!==$.orientationX.value&&($.orientationX.value=_),y!==$.orientationY.value&&($.orientationY.value=y),x!==$.orientationZ.value&&($.orientationZ.value=x),S!==$.panningModel&&($.panningModel=S),k!==$.positionX.value&&($.positionX.value=k),g!==$.positionY.value&&($.positionY.value=g),w!==$.positionZ.value&&($.positionZ.value=w),T!==$.refDistance&&($.refDistance=T),v!==$.rolloffFactor&&($.rolloffFactor=v),(K[0]!==1||K[1]!==0||K[2]!==0)&&N.setOrientation(...K),(kt[0]!==0||kt[1]!==0||kt[2]!==0)&&N.setPosition(...kt);const nt=()=>{M.connect(N),n(M,j,0,0),j.connect(E).connect(C,0,0),j.connect(P).connect(C,0,1),j.connect(R).connect(C,0,2),j.connect(V).connect(C,0,3),j.connect(G).connect(C,0,4),j.connect(q).connect(C,0,5),C.connect(B).connect(l.destination)},yt=()=>{M.disconnect(N),a(M,j,0,0),j.disconnect(E),E.disconnect(C),j.disconnect(P),P.disconnect(C),j.disconnect(R),R.disconnect(C),j.disconnect(V),V.disconnect(C),j.disconnect(G),G.disconnect(C),j.disconnect(q),q.disconnect(C),C.disconnect(B),B.disconnect(l.destination)};return u($e($,N),nt,yt)},$c=n=>(t,{disableNormalization:e,imag:s,real:i})=>{const r=s instanceof Float32Array?s:new Float32Array(s),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(s).length<2)throw n();return a},_s=(n,t,e,s)=>n.createScriptProcessor(t,e,s),Zc=(n,t)=>(e,s)=>{const i=s.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return n(e,s);const r=e.createStereoPanner();return ft(r,s),ct(r,s,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},Xc=(n,t,e,s,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},l={...u,oversample:"none"},h=(d,m,_,y)=>{const x=new Float32Array(16385),S=new Float32Array(16385);for(let O=0;O<16385;O+=1){const N=O/16384*c;x[O]=Math.cos(N),S[O]=Math.sin(N)}const k=e(d,{...u,gain:0}),g=s(d,{...l,curve:x}),w=s(d,{...l,curve:a}),T=e(d,{...u,gain:0}),v=s(d,{...l,curve:S});return{connectGraph(){m.connect(k),m.connect(w.inputs===void 0?w:w.inputs[0]),m.connect(T),w.connect(_),_.connect(g.inputs===void 0?g:g.inputs[0]),_.connect(v.inputs===void 0?v:v.inputs[0]),g.connect(k.gain),v.connect(T.gain),k.connect(y,0,0),T.connect(y,0,1)},disconnectGraph(){m.disconnect(k),m.disconnect(w.inputs===void 0?w:w.inputs[0]),m.disconnect(T),w.disconnect(_),_.disconnect(g.inputs===void 0?g:g.inputs[0]),_.disconnect(v.inputs===void 0?v:v.inputs[0]),g.disconnect(k.gain),v.disconnect(T.gain),k.disconnect(y,0,0),T.disconnect(y,0,1)}}},p=(d,m,_,y)=>{const x=new Float32Array(16385),S=new Float32Array(16385),k=new Float32Array(16385),g=new Float32Array(16385),w=Math.floor(16385/2);for(let V=0;V<16385;V+=1)if(V>w){const G=(V-w)/(16384-w)*c;x[V]=Math.cos(G),S[V]=Math.sin(G),k[V]=0,g[V]=1}else{const G=V/(16384-w)*c;x[V]=1,S[V]=0,k[V]=Math.cos(G),g[V]=Math.sin(G)}const T=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),v=e(d,{...u,gain:0}),O=s(d,{...l,curve:x}),N=e(d,{...u,gain:0}),A=s(d,{...l,curve:S}),C=s(d,{...l,curve:a}),M=e(d,{...u,gain:0}),E=s(d,{...l,curve:k}),P=e(d,{...u,gain:0}),R=s(d,{...l,curve:g});return{connectGraph(){m.connect(T),m.connect(C.inputs===void 0?C:C.inputs[0]),T.connect(v,0),T.connect(N,0),T.connect(M,1),T.connect(P,1),C.connect(_),_.connect(O.inputs===void 0?O:O.inputs[0]),_.connect(A.inputs===void 0?A:A.inputs[0]),_.connect(E.inputs===void 0?E:E.inputs[0]),_.connect(R.inputs===void 0?R:R.inputs[0]),O.connect(v.gain),A.connect(N.gain),E.connect(M.gain),R.connect(P.gain),v.connect(y,0,0),M.connect(y,0,0),N.connect(y,0,1),P.connect(y,0,1)},disconnectGraph(){m.disconnect(T),m.disconnect(C.inputs===void 0?C:C.inputs[0]),T.disconnect(v,0),T.disconnect(N,0),T.disconnect(M,1),T.disconnect(P,1),C.disconnect(_),_.disconnect(O.inputs===void 0?O:O.inputs[0]),_.disconnect(A.inputs===void 0?A:A.inputs[0]),_.disconnect(E.inputs===void 0?E:E.inputs[0]),_.disconnect(R.inputs===void 0?R:R.inputs[0]),O.disconnect(v.gain),A.disconnect(N.gain),E.disconnect(M.gain),R.disconnect(P.gain),v.disconnect(y,0,0),M.disconnect(y,0,0),N.disconnect(y,0,1),P.disconnect(y,0,1)}}},f=(d,m,_,y,x)=>{if(m===1)return h(d,_,y,x);if(m===2)return p(d,_,y,x);throw i()};return(d,{channelCount:m,channelCountMode:_,pan:y,...x})=>{if(_==="max")throw i();const S=n(d,{...x,channelCount:1,channelCountMode:_,numberOfInputs:2}),k=e(d,{...x,channelCount:m,channelCountMode:_,gain:1}),g=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:w,disconnectGraph:T}=f(d,m,k,g,S);Object.defineProperty(g.gain,"defaultValue",{get:()=>0}),Object.defineProperty(g.gain,"maxValue",{get:()=>1}),Object.defineProperty(g.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return k.channelCount},set channelCount(C){k.channelCount!==C&&(O&&T(),{connectGraph:w,disconnectGraph:T}=f(d,C,k,g,S),O&&w()),k.channelCount=C},get channelCountMode(){return k.channelCountMode},set channelCountMode(C){if(C==="clamped-max"||C==="max")throw i();k.channelCountMode=C},get channelInterpretation(){return k.channelInterpretation},set channelInterpretation(C){k.channelInterpretation=C},get context(){return k.context},get inputs(){return[k]},get numberOfInputs(){return k.numberOfInputs},get numberOfOutputs(){return k.numberOfOutputs},get pan(){return g.gain},addEventListener(...C){return k.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return k.dispatchEvent(C[0])},removeEventListener(...C){return k.removeEventListener(C[0],C[1],C[2])}};let O=!1;const N=()=>{w(),O=!0},A=()=>{T(),O=!1};return r($e(v,S),N,A)}},Qc=(n,t,e,s,i,r,o)=>(a,c)=>{const u=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);ft(u,c);const l=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(l!==null&&l.length<2)throw t();it(u,{curve:l},"curve"),it(u,c,"oversample");let h=null,p=!1;return o(u,"curve",m=>()=>m.call(u),m=>_=>(m.call(u,_),p&&(s(_)&&h===null?h=n(a,u):!s(_)&&h!==null&&(h(),h=null)),_)),i(u,()=>{p=!0,s(u.curve)&&(h=n(a,u))},()=>{p=!1,h!==null&&(h(),h=null)})},Yc=(n,t,e,s,i)=>(r,{curve:o,oversample:a,...c})=>{const u=r.createWaveShaper(),l=r.createWaveShaper();ft(u,c),ft(l,c);const h=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1});let m=null,_=!1,y=null;const x={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(g){h.channelCount=g,p.channelCount=g,u.channelCount=g,f.channelCount=g,l.channelCount=g,d.channelCount=g},get channelCountMode(){return u.channelCountMode},set channelCountMode(g){h.channelCountMode=g,p.channelCountMode=g,u.channelCountMode=g,f.channelCountMode=g,l.channelCountMode=g,d.channelCountMode=g},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(g){h.channelInterpretation=g,p.channelInterpretation=g,u.channelInterpretation=g,f.channelInterpretation=g,l.channelInterpretation=g,d.channelInterpretation=g},get context(){return u.context},get curve(){return y},set curve(g){if(g!==null&&g.length<2)throw t();if(g===null)u.curve=g,l.curve=g;else{const w=g.length,T=new Float32Array(w+2-w%2),v=new Float32Array(w+2-w%2);T[0]=g[0],v[0]=-g[w-1];const O=Math.ceil((w+1)/2),N=(w+1)/2-1;for(let A=1;A<O;A+=1){const C=A/O*N,M=Math.floor(C),E=Math.ceil(C);T[A]=M===E?g[M]:(1-(C-M))*g[M]+(1-(E-C))*g[E],v[A]=M===E?-g[w-1-M]:-((1-(C-M))*g[w-1-M])-(1-(E-C))*g[w-1-E]}T[O]=w%2===1?g[O-1]:(g[O-2]+g[O-1])/2,u.curve=T,l.curve=v}y=g,_&&(s(y)&&m===null?m=n(r,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(g){u.oversample=g,l.oversample=g},addEventListener(...g){return h.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return h.dispatchEvent(g[0])},removeEventListener(...g){return h.removeEventListener(g[0],g[1],g[2])}};o!==null&&(x.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==x.oversample&&(x.oversample=a);const S=()=>{h.connect(u).connect(f),h.connect(p).connect(l).connect(d).connect(f),_=!0,s(y)&&(m=n(r,h))},k=()=>{h.disconnect(u),u.disconnect(f),h.disconnect(p),p.disconnect(l),l.disconnect(d),d.disconnect(f),_=!1,m!==null&&(m(),m=null)};return i($e(x,f),S,k)},bt=()=>new DOMException("","NotSupportedError"),Hc={numberOfChannels:1},Jc=(n,t,e,s,i)=>class extends n{constructor(o,a,c){let u;if(typeof o=="number"&&a!==void 0&&c!==void 0)u={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")u=o;else throw new Error("The given parameters are not valid.");const{length:l,numberOfChannels:h,sampleRate:p}={...Hc,...u},f=s(h,l,p);t(Ke,()=>Ke(f))||f.addEventListener("statechange",(()=>{let d=0;const m=_=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",m),_.stopImmediatePropagation(),this._waitForThePromiseToSettle(_)):d+=1)};return m})()),super(f,h),this._length=l,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,$i(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},Kc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},tu=(n,t,e,s,i,r,o)=>class extends n{constructor(c,u){const l=i(c),h={...Kc,...u},p=e(l,h),f=r(l),d=f?s():null,m=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,m,-m),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=u;const l=this._nativeOscillatorNode.onended;this._onended=l!==null&&l===u?c:l}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){We(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),Xt(this)&&ds(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},eu=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const u=async(l,h)=>{let p=e(l);const f=gt(p,h);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:o===null?void 0:o,type:p.type};p=t(h,d),a!==null&&p.start(a),c!==null&&p.stop(c)}return r.set(h,p),f?(await n(h,l.detune,p.detune),await n(h,l.frequency,p.frequency)):(await s(h,l.detune,p.detune),await s(h,l.frequency,p.frequency)),await i(l,h,p),p};return{set periodicWave(l){o=l},set start(l){a=l},set stop(l){c=l},render(l,h){const p=r.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},su={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},nu=(n,t,e,s,i,r,o)=>class extends n{constructor(c,u){const l=i(c),h={...su,...u},p=e(l,h),f=r(l),d=f?s():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,vt,xt),this._orientationY=t(this,f,p.orientationY,vt,xt),this._orientationZ=t(this,f,p.orientationZ,vt,xt),this._positionX=t(this,f,p.positionX,vt,xt),this._positionY=t(this,f,p.positionY,vt,xt),this._positionZ=t(this,f,p.positionZ,vt,xt),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},iu=(n,t,e,s,i,r,o,a,c,u)=>()=>{const l=new WeakMap;let h=null;const p=async(f,d)=>{let m=null,_=r(f);const y={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},x={...y,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},S=gt(_,d);if("bufferSize"in _)m=s(d,{...y,gain:1});else if(!S){const k={...x,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=i(d,k)}if(l.set(d,m===null?_:m),m!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new o(6,f.context.length,d.sampleRate),C=t(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});C.connect(A.destination),h=(async()=>{const M=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(E,P)=>{const R=e(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:P===0?1:0});return await a(A,E,R.offset),R}));for(let E=0;E<6;E+=1)M[E].connect(C,0,E),M[E].start(0);return u(A)})()}const k=await h,g=s(d,{...y,gain:1});await c(f,d,g);const w=[];for(let A=0;A<k.numberOfChannels;A+=1)w.push(k.getChannelData(A));let T=[w[0][0],w[1][0],w[2][0]],v=[w[3][0],w[4][0],w[5][0]],O=s(d,{...y,gain:1}),N=i(d,{...x,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:v[0],positionY:v[1],positionZ:v[2]});g.connect(O).connect(N.inputs[0]),N.connect(m);for(let A=128;A<k.length;A+=128){const C=[w[0][A],w[1][A],w[2][A]],M=[w[3][A],w[4][A],w[5][A]];if(C.some((E,P)=>E!==T[P])||M.some((E,P)=>E!==v[P])){T=C,v=M;const E=A/d.sampleRate;O.gain.setValueAtTime(0,E),O=s(d,{...y,gain:0}),N=i(d,{...x,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),O.gain.setValueAtTime(1,E),g.connect(O).connect(N.inputs[0]),N.connect(m)}}return m}return S?(await n(d,f.orientationX,_.orientationX),await n(d,f.orientationY,_.orientationY),await n(d,f.orientationZ,_.orientationZ),await n(d,f.positionX,_.positionX),await n(d,f.positionY,_.positionY),await n(d,f.positionZ,_.positionZ)):(await a(d,f.orientationX,_.orientationX),await a(d,f.orientationY,_.orientationY),await a(d,f.orientationZ,_.orientationZ),await a(d,f.positionX,_.positionX),await a(d,f.positionY,_.positionY),await a(d,f.positionZ,_.positionZ)),ze(_)?await c(f,d,_.inputs[0]):await c(f,d,_),_};return{render(f,d){const m=l.get(d);return m!==void 0?Promise.resolve(m):p(f,d)}}},ru={disableNormalization:!1},ou=(n,t,e,s)=>class sr{constructor(r,o){const a=t(r),c=s({...ru,...o}),u=n(a,c);return e.add(u),u}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===sr.prototype||e.has(r)}},au=(n,t)=>(e,s,i)=>(n(s).replay(i),t(s,e,i)),cu=(n,t,e)=>async(s,i,r)=>{const o=n(s);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([u,l])=>{const p=await t(u).render(u,i),f=s.context.destination;!e(u)&&(s!==f||!e(s))&&p.connect(r,l,c)})).reduce((a,c)=>[...a,...c],[]))},uu=(n,t,e)=>async(s,i,r)=>{const o=t(s);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const l=await n(a).render(a,i);e(a)||l.connect(r,c)}))},lu=(n,t,e,s)=>i=>n(Ke,()=>Ke(i))?Promise.resolve(n(s,s)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),hu=n=>(t,e)=>{n.set(t,e)},du=n=>(t,e)=>n.set(t,e),pu=(n,t,e,s,i,r,o,a)=>(c,u)=>e(c).render(c,u).then(()=>Promise.all(Array.from(s(u)).map(l=>e(l).render(l,u)))).then(()=>i(u)).then(l=>(typeof l.copyFromChannel!="function"?(o(l),Bn(l)):t(r,()=>r(l))||a(l),n.add(l),l)),fu={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},mu=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const u=i(a),l={...fu,...c},h=e(u,l),p=r(u),f=p?s():null;super(a,!1,h,f),this._pan=t(this,p,h.pan)}get pan(){return this._pan}},_u=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=t(c,h)}return r.set(c,u),l?await n(c,a.pan,u.pan):await s(c,a.pan,u.pan),ze(u)?await i(a,c,u.inputs[0]):await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},gu=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},yu=(n,t)=>async()=>{if(n===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await s.audioWorklet.addModule(i);const a=new n(s,"a",{numberOfOutputs:0}),c=s.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await s.startRendering(),await new Promise(u=>setTimeout(u))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},vu=(n,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{s.disconnect(),i(e.currentTime!==0)},e.startRendering()})},wu=()=>new DOMException("","UnknownError"),Tu={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},bu=(n,t,e,s,i,r,o)=>class extends n{constructor(c,u){const l=i(c),h={...Tu,...u},p=e(l,h),d=r(l)?s():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},xu=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=n(o,u)}return s.set(o,a),ze(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Su=()=>typeof window>"u"?null:window,Cu=(n,t)=>e=>{e.copyFromChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=s.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)s[h]=u[h+o]},e.copyToChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=s.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)u[h+o]=s[h]}},ku=n=>t=>{t.copyFromChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyToChannel)},Au=n=>(t,e)=>{const s=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=s),n(t,"buffer",i=>()=>{const r=i.call(t);return r===s?null:r},i=>r=>i.call(t,r===null?s:r))},Nu=(n,t)=>(e,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const i=e.createBufferSource();t(s,()=>{const a=s.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(s,0,c)},()=>i.disconnect(s))},nr=(n,t,e)=>n.copyFromChannel===void 0?n.getChannelData(e)[0]:(n.copyFromChannel(t,e),t[0]),ir=n=>{if(n===null)return!1;const t=n.length;return t%2!==0?n[Math.floor(t/2)]!==0:n[t/2-1]+n[t/2]!==0},gs=(n,t,e,s)=>{let i=n;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(n,t,{get:e(r),set:s(o)})},Ou=n=>({...n,outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),Du=n=>({...n,channelCount:n.numberOfOutputs}),Eu=n=>{const{imag:t,real:e}=n;return t===void 0?e===void 0?{...n,imag:[0,0],real:[0,0]}:{...n,imag:Array.from(e,()=>0),real:e}:e===void 0?{...n,imag:t,real:Array.from(t,()=>0)}:{...n,imag:t,real:e}},rr=(n,t,e)=>{try{n.setValueAtTime(t,e)}catch(s){if(s.code!==9)throw s;rr(n,t,e+1e-7)}},Iu=n=>{const t=n.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},Mu=n=>{const t=n.createBufferSource(),e=n.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},Ru=n=>{const t=n.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Zn=n=>{const t=n.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},or=n=>{const t=n.createBuffer(1,1,44100),e=n.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},Xn=n=>{const t=n.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},Vu=n=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(n)}finally{t.close(),e.close()}},Fu=n=>{n.start=(t=>(e=0,s=0,i)=>{const r=n.buffer,o=r===null?s:Math.min(r.duration,s);r!==null&&o>r.duration-.5/n.context.sampleRate?t.call(n,e,0,0):t.call(n,e,o,i)})(n.start)},ar=(n,t)=>{const e=t.createGain();n.connect(e);const s=(i=>()=>{i.call(n,e),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),$e(n,e),n.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(n,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(n,o),r=!0}})(n.stop)},Ze=(n,t)=>e=>{const s={value:n};return Object.defineProperties(e,{currentTarget:s,target:s}),typeof t=="function"?t.call(n,e):t.handleEvent.call(n,e)},Pu=so(Ne),qu=co(Ne),Wu=Ta(rn),cr=new WeakMap,Lu=Wa(cr),qt=Ho(new Map,new WeakMap),jt=Su(),ur=mc(qt,Ut),Qn=qa(wt),_t=cu(wt,Qn,we),ju=fo(ur,st,_t),et=Ba(nn),te=Bc(jt),tt=rc(te),lr=new WeakMap,hr=Ea(Ze),ys=vc(jt),Yn=ec(ys),Hn=sc(jt),dr=nc(jt),ts=Tc(jt),ht=Wo(no(Wi),ao(Pu,qu,Is,Wu,Ms,wt,Lu,hs,st,Ne,Xt,we,ks),qt,Ya(xn,Ms,wt,st,Je,Xt),Ut,on,bt,ga(Is,xn,wt,st,Je,et,Xt,tt),Sa(lr,wt,Pt),hr,et,Yn,Hn,dr,tt,ts),Bu=po(ht,ju,Ut,ur,et,tt),Jn=new WeakSet,Oi=_c(jt),pr=la(new Uint32Array(1)),Kn=Cu(pr,Ut),ti=ku(pr),fr=_o(Jn,qt,bt,Oi,te,gu(Oi),Kn,ti),an=uo(Ct),mr=uu(Qn,ps,we),Gt=ia(mr),Xe=yc(an,qt,Iu,Mu,Ru,Zn,or,Xn,Fu,Au(gs),ar),zt=au(La(ps),mr),Uu=vo(Gt,Xe,st,zt,_t),Wt=Lo(io(Li),lr,jn,jo,Yr,Hr,Jr,Kr,to,wn,Pi,ys,rr),Gu=yo(ht,Uu,Wt,mt,Xe,et,tt,Ze),zu=No(ht,Oo,Ut,mt,wc(Ct,gs),et,tt,_t),$u=Yo(Gt,tr,st,zt,_t),Oe=du(cr),Zu=Qo(ht,Wt,$u,on,tr,et,tt,Oe),le=pc(Ne,Hn),Xu=Nu(mt,le),he=Nc(ys,Xu),Qu=ta(he,st,_t),Yu=Ko(ht,Qu,he,et,tt),Hu=na(ms,st,_t),Ju=sa(ht,Hu,ms,et,tt,Du),Ku=Ec(an,Xe,Ct,le),Qe=Dc(an,qt,Ku,Zn,Xn),tl=ua(Gt,Qe,st,zt,_t),el=ca(ht,Wt,tl,Qe,et,tt,Ze),_r=Ic(bt,gs),sl=pa(_r,st,_t),nl=da(ht,sl,_r,et,tt,Oe),il=wa(Gt,er,st,zt,_t),rl=va(ht,Wt,il,er,et,tt,Oe),gr=Mc(bt),ol=Na(Gt,gr,st,zt,_t),al=Aa(ht,Wt,ol,gr,bt,et,tt,Oe),cl=Fa(Gt,Ct,st,zt,_t),ul=Va(ht,Wt,cl,Ct,et,tt),ll=Pc(on,mt,_s,bt),cn=lu(qt,Ct,_s,vu(Ct,te)),hl=Qa(Xe,st,te,_t,cn),dl=Rc(ll),pl=Za(ht,dl,hl,et,tt,Oe),fl=Do(Wt,he,Qe,_s,bt,nr,tt,gs),yr=new WeakMap,ml=dc(zu,fl,hr,tt,yr,Ze),vr=Uc(an,qt,Zn,or,Xn,ar),_l=eu(Gt,vr,st,zt,_t),gl=tu(ht,Wt,vr,_l,et,tt,Ze),wr=oa(Xe),yl=Yc(wr,mt,Ct,ir,le),un=Qc(wr,mt,yl,ir,le,ys,gs),vl=zc(Is,mt,he,Ct,_s,un,bt,Ms,nr,le),Tr=Gc(vl),wl=iu(Gt,he,Qe,Ct,Tr,st,te,zt,_t,cn),Tl=nu(ht,Wt,Tr,wl,et,tt,Oe),bl=$c(Ut),xl=ou(bl,et,new WeakSet,Eu),Sl=Xc(he,ms,Ct,un,bt,le),br=Zc(Sl,bt),Cl=_u(Gt,br,st,zt,_t),kl=mu(ht,Wt,br,Cl,et,tt),Al=xu(un,st,_t),Nl=bu(ht,mt,un,Al,et,tt,Oe),xr=oc(jt),ei=Ia(jt),Sr=new WeakMap,Ol=Ua(Sr,te),Dl=xr?oo(qt,bt,Da(jt),ei,Ma(eo),et,Ol,tt,ts,new WeakMap,new WeakMap,yu(ts,te),jt):void 0,El=ic(Yn,tt),Il=_a(Jn,qt,ma,Oa,new WeakSet,et,El,Ds,Ke,Kn,ti),Cr=Zo(Dl,Bu,fr,Gu,Zu,Yu,Ju,el,nl,Il,rl,al,ul,pl,ml,gl,Tl,xl,kl,Nl),Ml=ac(ht,qc,et,tt),Rl=uc(ht,Wc,et,tt),Vl=lc(ht,Lc,et,tt),Fl=jc(mt,tt),Pl=hc(ht,Fl,et),ql=Ao(Cr,mt,bt,wu,Ml,Rl,Vl,Pl,ys),si=Ga(yr),Wl=lo(si),kr=ra(Ut),Ll=ba(si),Ar=Ca(Ut),Nr=new WeakMap,jl=Pa(Nr,Pt),Bl=Ac(kr,Ut,mt,he,ms,Qe,Ct,_s,bt,Ar,ei,jl,le),Ul=xc(mt,Bl,Ct,bt,le),Gl=$o(Gt,kr,Xe,he,ms,Qe,Ct,Ll,Ar,ei,st,ts,te,zt,_t,cn),zl=ja(Sr),$l=hu(Nr),Di=xr?Uo(Wl,ht,Wt,Gl,Ul,wt,zl,et,tt,ts,Ou,$l,Vu,Ze):void 0,Zl=fa(bt,te),Xl=pu(Jn,qt,Qn,si,cn,Ds,Kn,ti),Ql=Jc(Cr,qt,mt,Zl,Xl),Yl=Ha(nn,Yn),Hl=Ja(Ln,Hn),Jl=Ka(jn,dr),Kl=tc(nn,tt);function Et(n){return n===void 0}function Z(n){return n!==void 0}function th(n){return typeof n=="function"}function ce(n){return typeof n=="number"}function ge(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function eh(n){return typeof n=="boolean"}function Ft(n){return Array.isArray(n)}function Qt(n){return typeof n=="string"}function Ss(n){return Qt(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function L(n,t){if(!n)throw new Error(t)}function Tt(n,t,e=1/0){if(!(t<=n&&n<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${n}`)}function Or(n){!n.isOffline&&n.state!=="running"&&ln('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Dr=!1,Ei=!1;function Ii(n){Dr=n}function sh(n){Et(n)&&Dr&&!Ei&&(Ei=!0,ln("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Er=console;function nh(...n){Er.log(...n)}function ln(...n){Er.warn(...n)}function ih(n){return new ql(n)}function rh(n,t,e){return new Ql(n,t,e)}const ye=typeof self=="object"?self:null,oh=ye&&(ye.hasOwnProperty("AudioContext")||ye.hasOwnProperty("webkitAudioContext"));function ah(n,t,e){return L(Z(Di),"This node only works in a secure context (https or localhost)"),new Di(n,t,e)}function Lt(n,t,e,s){var i=arguments.length,r=i<3?t:s===null?s=Object.getOwnPropertyDescriptor(t,e):s,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(n,t,e,s);else for(var a=n.length-1;a>=0;a--)(o=n[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function lt(n,t,e,s){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(l){try{u(s.next(l))}catch(h){o(h)}}function c(l){try{u(s.throw(l))}catch(h){o(h)}}function u(l){l.done?r(l.value):i(l.value).then(a,c)}u((s=s.apply(n,t||[])).next())})}class ch{constructor(t,e,s,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=s,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),s=new Worker(e);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Te(n){return Jl(n)}function ae(n){return Hl(n)}function As(n){return Kl(n)}function Re(n){return Yl(n)}function uh(n){return n instanceof fr}function lh(n,t){return n==="value"||Te(t)||ae(t)||uh(t)}function Pe(n,...t){if(!t.length)return n;const e=t.shift();if(ge(n)&&ge(e))for(const s in e)lh(s,e[s])?n[s]=e[s]:ge(e[s])?(n[s]||Object.assign(n,{[s]:{}}),Pe(n[s],e[s])):Object.assign(n,{[s]:e[s]});return Pe(n,...t)}function hh(n,t){return n.length===t.length&&n.every((e,s)=>t[s]===e)}function b(n,t,e=[],s){const i={},r=Array.from(t);if(ge(r[0])&&s&&!Reflect.has(r[0],s)&&(Object.keys(r[0]).some(a=>Reflect.has(n,a))||(Pe(i,{[s]:r[0]}),e.splice(e.indexOf(s),1),r.shift())),r.length===1&&ge(r[0]))Pe(i,r[0]);else for(let o=0;o<e.length;o++)Z(r[o])&&(i[e[o]]=r[o]);return Pe(n,i)}function dh(n){return n.constructor.getDefaults()}function ve(n,t){return Et(n)?t:n}function oe(n,t){return t.forEach(e=>{Reflect.has(n,e)&&delete n[e]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class ee{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||ye&&this.toString()===ye.TONE_DEBUG_CLASS)&&nh(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}ee.version=Fi;const ni=1e-6;function Le(n,t){return n>t+ni}function Nn(n,t){return Le(n,t)||Rt(n,t)}function Ps(n,t){return n+ni<t}function Rt(n,t){return Math.abs(n-t)<ni}function ph(n,t,e){return Math.max(Math.min(n,e),t)}class It extends ee{constructor(){super(),this.name="Timeline",this._timeline=[];const t=b(It.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(L(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];L(Nn(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const s=this._search(t,e);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const s=this._search(t,e);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const s=this._search(t);return s-1>=0?this._timeline[s-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Rt(this._timeline[e].time,t)){for(let s=e;s>=0&&Rt(this._timeline[s].time,t);s--)e=s;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&Nn(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let s=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;s<r;){let o=Math.floor(s+(r-s)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Rt(a[e],t)){for(let u=o;u<this._timeline.length;u++){const l=this._timeline[u];if(Rt(l[e],t))o=u;else break}return o}else{if(Ps(a[e],t)&&Le(c[e],t))return o;Le(a[e],t)?r=o:s=o+1}}return-1}_iterate(t,e=0,s=this._timeline.length-1){this._timeline.slice(e,s+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const s=this._search(t);return s!==-1&&this._iterate(e,0,s),this}forEachAfter(t,e){const s=this._search(t);return this._iterate(e,s+1),this}forEachBetween(t,e,s){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(s,i,r)):i===-1&&this._iterate(s,0,r),this}forEachFrom(t,e){let s=this._search(t);for(;s>=0&&this._timeline[s].time>=t;)s--;return this._iterate(e,s+1),this}forEachAtTime(t,e){const s=this._search(t);if(s!==-1&&Rt(this._timeline[s].time,t)){let i=s;for(let r=s;r>=0&&Rt(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Ir=[];function hn(n){Ir.push(n)}function fh(n){Ir.forEach(t=>t(n))}const Mr=[];function dn(n){Mr.push(n)}function mh(n){Mr.forEach(t=>t(n))}class vs extends ee{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{Et(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const s=(...i)=>{e(...i),this.off(t,s)};return this.on(t,s),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(Et(this._events)&&(this._events={}),this._events.hasOwnProperty(i))if(Et(e))this._events[i]=[];else{const r=this._events[i];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const s=this._events[t].slice(0);for(let i=0,r=s.length;i<r;i++)s[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const s=Object.getOwnPropertyDescriptor(vs.prototype,e);Object.defineProperty(t.prototype,e,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class Rr extends vs{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class ws extends Rr{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new It,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const s=b(ws.getDefaults(),arguments,["context"]);s.context?(this._context=s.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=ih({latencyHint:s.latencyHint}),this._latencyHint=s.latencyHint),this._ticker=new ch(this.emit.bind(this,"tick"),s.clockSource,s.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=s.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(fh(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,s){return this._context.createBuffer(t,e,s)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,s){return this._context.createPeriodicWave(t,e,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return L(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return L(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return L(Re(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){L(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){L(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){L(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){L(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return ah(this.rawContext,t,e)}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){L(Z(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return lt(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return Re(this._context)?this._context.resume():Promise.resolve()}close(){return lt(this,void 0,void 0,function*(){Re(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&mh(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),s=e.getChannelData(0);for(let r=0;r<s.length;r++)s[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:s+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const s=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:s,time:r+e})};return i(),s}}class _h extends Rr{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,s){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function Y(n,t){Ft(t)?t.forEach(e=>Y(n,e)):Object.defineProperty(n,t,{enumerable:!0,writable:!1})}function Ts(n,t){Ft(t)?t.forEach(e=>Ts(n,e)):Object.defineProperty(n,t,{writable:!0})}const Q=()=>{};class J extends ee{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Q;const t=b(J.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,Qt(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Q,onload:Q,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Ot().sampleRate}set(t){return t instanceof J?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return lt(this,void 0,void 0,function*(){const e=J.load(t).then(s=>{this.set(s),this.onload(this)});J.downloads.push(e);try{yield e}finally{const s=J.downloads.indexOf(e);J.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ft(t)&&t[0].length>0,s=e?t.length:1,i=e?t[0].length:t.length,r=Ot(),o=r.createBuffer(s,i,r.sampleRate),a=!e&&s===1?[t]:t;for(let c=0;c<s;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(ce(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const s=this.numberOfChannels;for(let i=0;i<s;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/s),this.fromArray(e)}return this}toArray(t){if(ce(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let s=0;s<this.numberOfChannels;s++)e[s]=this.getChannelData(s);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){L(this.loaded,"Buffer is not loaded");const s=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);L(s<i,"The start time must be less than the end time");const r=i-s,o=Ot().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(s,i),a);return new J(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new J().fromArray(t)}static fromUrl(t){return lt(this,void 0,void 0,function*(){return yield new J().load(t)})}static load(t){return lt(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const c=e[1].split("|");let u=c[0];for(const l of c)if(J.supportsType(l)){u=l;break}t=t.replace(e[0],u)}const s=J.baseUrl===""||J.baseUrl.endsWith("/")?J.baseUrl:J.baseUrl+"/",i=document.createElement("a");i.href=s+t,i.pathname=(i.pathname+i.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(i.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield Ot().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),s=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return lt(this,void 0,void 0,function*(){for(yield Promise.resolve();J.downloads.length;)yield J.downloads[0]})}}J.baseUrl="";J.downloads=[];class pn extends ws{constructor(){super({clockSource:"offline",context:As(arguments[0])?arguments[0]:rh(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:As(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=As(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return lt(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const s=Math.floor(this.sampleRate/128);t&&e%s===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return lt(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new J(e)})}close(){return Promise.resolve()}}const Vr=new _h;let me=Vr;function Ot(){return me===Vr&&oh&&gh(new ws),me}function gh(n,t=!1){t&&me.dispose(),Re(n)?me=new ws(n):As(n)?me=new pn(n):me=n}function hd(){return me.resume()}if(ye&&!ye.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Fi} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function yh(n){return Math.pow(10,n/20)}function Fr(n){return 20*(Math.log(n)/Math.LN10)}function ii(n){return Math.pow(2,n/12)}let fn=440;function vh(){return fn}function wh(n){fn=n}function On(n){return Math.round(Pr(n))}function Pr(n){return 69+12*Math.log2(n/fn)}function Th(n){return fn*Math.pow(2,(n-69)/12)}class ri extends ee{constructor(t,e,s){super(),this.defaultUnits="s",this._val=e,this._units=s,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const s=parseInt(t,10),i=e==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/s)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,s)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i+=this._beatsToUnits(parseFloat(s)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof ri&&this.fromType(this._val),Et(this._val))return this._noArg();if(Qt(this._val)&&Et(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(ge(this._val)){let t=0;for(const e in this._val)if(Z(this._val[e])){const s=this._val[e],i=new this.constructor(this.context,e).valueOf()*s;t+=i}return t}if(Z(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return Qt(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Vt extends ri{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Vt(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const s=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/s)*s-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let s=e[0],i=new Vt(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Vt(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(s=r,i=o)}),s}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const s=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[s,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return On(this.toFrequency())}_now(){return this.context.now()}}class Dt extends Vt{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return vh()}static set A4(t){wh(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:Dt.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const i=bh[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:Dt.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,s){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i*=this._beatsToUnits(parseFloat(s)/4)),i}}})}transpose(t){return new Dt(this.context,this.valueOf()*ii(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return On(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Dt.A4);let s=Math.round(12*e)+57;const i=Math.floor(s/12);return i<0&&(s+=-12*i),xh[s%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Th(t)}static ftom(t){return On(t)}}const bh={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},xh=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class He extends Vt{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class St extends ee{constructor(){super();const t=b(St.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Ot()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return sh(t),new Vt(this.context,t).toSeconds()}toFrequency(t){return new Dt(this.context,t).toFrequency()}toTicks(t){return new He(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(s=>{Et(t[s])&&delete e[s]}),e}get(){const t=dh(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const s=this[e];Z(s)&&Z(s.value)&&Z(s.setValueAtTime)?t[e]=s.value:s instanceof St?t[e]=s._getPartialProperties(t[e]):Ft(s)||ce(s)||Qt(s)||eh(s)?t[e]=s:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&Z(this[e])&&(this[e]&&Z(this[e].value)&&Z(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof St?this[e].set(t[e]):this[e]=t[e])}),this}}class oi extends It{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,s){return Tt(e,0),this.add(Object.assign({},s,{state:t,time:e})),this}getLastState(t,e){const s=this._search(e);for(let i=s;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const s=this._search(e);if(s!==-1)for(let i=s;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class U extends St{constructor(){super(b(U.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=b(U.getDefaults(),arguments,["param","units","convert"]);for(L(Z(t.param)&&(Te(t.param)||t.param instanceof U),"param must be an AudioParam");!Te(t.param);)t.param=t.param._param;this._swappable=Z(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new It(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,Z(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(St.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return Z(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return Z(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return Z(this.maxValue)&&Z(this.minValue)&&Tt(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?yh(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?Fr(t):t}setValueAtTime(t,e){const s=this.toSeconds(e),i=this._fromType(t);return L(isFinite(i)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,s),this._events.add({time:s,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,s),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),s=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(s===null)r=i.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}s.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,s.time,s.value,e):r=this._exponentialInterpolate(i.time,o,s.time,s.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const s=this._fromType(t),i=this.toSeconds(e);return L(isFinite(s)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this._events.add({time:i,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(s,i),this}exponentialRampToValueAtTime(t,e){let s=this._fromType(t);s=Rt(s,0)?this._minOutput:s,this._assertRange(s);const i=this.toSeconds(e);return L(isFinite(s)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(s,i),this}exponentialRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(t,s+this.toSeconds(e)),this}linearRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(t,s+this.toSeconds(e)),this}targetRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(t,s,e),this}exponentialApproachValueAtTime(t,e,s){e=this.toSeconds(e),s=this.toSeconds(s);const i=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+s*.9),this.linearRampToValueAtTime(t,e+s),this}setTargetAtTime(t,e,s){const i=this._fromType(t);L(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),L(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:s,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,s),this._param.setTargetAtTime(i,r,s),this}setValueCurveAtTime(t,e,s,i=1){s=this.toSeconds(s),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=s/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return L(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),s=this._fromType(this.getValueAtTime(e));L(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+s);const i=this._events.get(e),r=this._events.getAfter(e);return i&&Rt(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),e)),this._events.add({time:e,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,e),this}rampTo(t,e=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,s):this.linearRampTo(t,e,s),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const s=this._events.get(e);if(s&&s.type==="setTargetAtTime"){const i=this._events.getAfter(s.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){L(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,s,i,r){return s+(e-s)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,s,i,r){return e+(i-e)*((r-t)/(s-t))}_exponentialInterpolate(t,e,s,i,r){return e*Math.pow(i/e,(r-t)/(s-t))}}class I extends St{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return Z(this.input)?Te(this.input)||this.input instanceof U?1:this.input.numberOfInputs:0}get numberOfOutputs(){return Z(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return Z(t)&&(t instanceof I||ae(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(s=>{s.channelCount=t.channelCount,s.channelCountMode=t.channelCountMode,s.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();L(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,s=0){return Yt(this,t,e,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return ln("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,s=0){return qr(this,t,e,s),this}chain(...t){return je(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),Z(this.input)&&(this.input instanceof I?this.input.dispose():ae(this.input)&&this.input.disconnect()),Z(this.output)&&(this.output instanceof I?this.output.dispose():ae(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function je(...n){const t=n.shift();n.reduce((e,s)=>(e instanceof I?e.connect(s):ae(e)&&Yt(e,s),s),t)}function Yt(n,t,e=0,s=0){for(L(Z(n),"Cannot connect from undefined node"),L(Z(t),"Cannot connect to undefined node"),(t instanceof I||ae(t))&&L(t.numberOfInputs>0,"Cannot connect to node with no inputs"),L(n.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof I||t instanceof U;)Z(t.input)&&(t=t.input);for(;n instanceof I;)Z(n.output)&&(n=n.output);Te(t)?n.connect(t,e):n.connect(t,e,s)}function qr(n,t,e=0,s=0){if(Z(t))for(;t instanceof I;)t=t.input;for(;!ae(n);)Z(n.output)&&(n=n.output);Te(t)?n.disconnect(t,e):ae(t)?n.disconnect(t,e,s):n.disconnect()}class z extends I{constructor(){super(b(z.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=b(z.getDefaults(),arguments,["gain","units"]);this.gain=new U({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Y(this,"gain")}static getDefaults(){return Object.assign(I.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Be extends I{constructor(t){super(t),this.onended=Q,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new z({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const s=this.toSeconds(e);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(I.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Q})}_startGain(t,e=1){L(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=t+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+s):this._gainNode.gain.exponentialApproachValueAtTime(e,t,s)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){L(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Q&&(this.onended(this),this.onended=Q,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),L(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Q,this}}class qs extends Be{constructor(){super(b(qs.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=b(qs.getDefaults(),arguments,["offset"]);Yt(this._source,this._gainNode),this.offset=new U({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Be.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class X extends I{constructor(){super(b(X.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=b(X.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new qs({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(I.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,s=0){return mn(this,t,e,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,s){return this._param.exponentialRampTo(t,e,s),this}linearRampTo(t,e,s){return this._param.linearRampTo(t,e,s),this}targetRampTo(t,e,s){return this._param.targetRampTo(t,e,s),this}exponentialApproachValueAtTime(t,e,s){return this._param.exponentialApproachValueAtTime(t,e,s),this}setTargetAtTime(t,e,s){return this._param.setTargetAtTime(t,e,s),this}setValueCurveAtTime(t,e,s,i){return this._param.setValueCurveAtTime(t,e,s,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,s){return this._param.rampTo(t,e,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function mn(n,t,e,s){(t instanceof U||Te(t)||t instanceof X&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof X&&(t.overridden=!0)),Yt(n,t,e,s)}class Ws extends U{constructor(){super(b(Ws.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new It(1/0),this._multiplier=1;const t=b(Ws.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(U.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,s){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/s,1));for(let a=0;a<=o;a++){const c=s*a+e,u=this._exponentialApproach(r.time,r.value,i,s,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}setValueAtTime(t,e){const s=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const s=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const s=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,u=this._exponentialInterpolate(i.time,i.value,e,s,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Et(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const s=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(s+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),s=this._events.get(e);return Math.max(this._getTicksUntilEvent(s,e),0)}getDurationOfTicks(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-s}getTimeOfTick(t){const e=this._events.get(t,"ticks"),s=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&s&&s.type==="linearRampToValueAtTime"&&e.value!==s.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(s.time))-i)/(s.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,u=(-i-a)/o;return(c>0?c:u)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const s=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(s);return this.getTicksAtTime(s+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class Ls extends X{constructor(){super(b(Ls.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=b(Ls.getDefaults(),arguments,["value"]);this.input=this._param=new Ws({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(X.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class js extends St{constructor(){super(b(js.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new oi,this._tickOffset=new It,this._ticksAtTime=new It,this._secondsAtTime=new It;const t=b(js.getDefaults(),arguments,["frequency"]);this.frequency=new Ls({context:this.context,units:t.units,value:t.frequency}),Y(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},St.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const s=this.toSeconds(t);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),Z(e)&&this.setTicksAtTime(e,s),this._ticksAtTime.cancel(s),this._secondsAtTime.cancel(s)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const s=this._state.get(e);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),s=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||s,a=i?i.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,u=>{let l=o.time;const h=this._tickOffset.get(u.time);h&&h.time>=o.time&&(a=h.ticks,l=h.time),o.state==="started"&&u.state!=="started"&&(a+=this.frequency.getTicksAtTime(u.time)-this.frequency.getTicksAtTime(l),u.time!==r.time&&(c={state:u.state,time:u.time,ticks:a})),o=u}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),s=this.frequency.timeToTicks(t,e);this.setTicksAtTime(s,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let u=r.time;const l=this._tickOffset.get(c.time);l&&l.time>=r.time&&(o=l.seconds,u=l.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-u,c.time!==s.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(s),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const s=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(s.time,i.time),o=this.frequency.getTicksAtTime(r)+t-s.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,s){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,s),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),u=a-c;let l=Math.ceil(u)-u;l=Rt(l,1)?0:l;let h=this.frequency.getTimeOfTick(a+l);for(;h<e;){try{s(h,Math.round(this.getTicksAtTime(h)))}catch(p){r=p;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Ue extends St{constructor(){super(b(Ue.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Q,this._lastUpdate=0,this._state=new oi("stopped"),this._boundLoop=this._loop.bind(this);const t=b(Ue.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new js({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Y(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(St.getDefaults(),{callback:Q,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Or(this.context);const s=this.toSeconds(t);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,e),s<this._lastUpdate&&this.emit("start",s,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(i+t,s)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,s=>{switch(s.state){case"started":const i=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,i);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(t,e,(s,i)=>{this.callback(s,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}vs.mixin(Ue);class Dn extends I{constructor(){super(b(Dn.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=b(Dn.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new U({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Y(this,"delayTime")}static getDefaults(){return Object.assign(I.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class ai extends ee{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=b(ai.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const s=t.urls[e];this.add(e,s,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Q,onload:Q,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return L(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,s=Q,i=Q){return Qt(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new J(this.baseUrl+e,s,i))):this._buffers.set(t.toString(),new J(e,s,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class Fe extends He{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class Sh extends St{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new It,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}hn(n=>{n.draw=new Sh({context:n})});dn(n=>{n.draw.dispose()});class Ch extends ee{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){L(Z(t.time),"Events must have a time property"),L(Z(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new kh(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const s of e)if(s.event===t){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let s,i=null;if(e>0)if(t.left.right===null)s=t.left,s.right=t.right,i=s;else{for(s=t.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,i=s.parent,s.left=t.left,s.right=t.right)}else if(t.right.left===null)s=t.right,s.left=t.left,i=s;else{for(s=t.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,i=s.parent,s.left=t.left,s.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=s:t.parent.right=s:this._setRoot(s),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,s=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,s=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let s=e[0];for(let i=1;i<e.length;i++)e[i].low>s.low&&(s=e[i]);return s.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(s=>e.push(s)),e.forEach(s=>{s.event&&t(s.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const s=[];this._root.search(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const s=[];this._root.searchAfter(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class kh{constructor(t,e,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class be extends I{constructor(){super(b(be.getDefaults(),arguments,["volume"])),this.name="Volume";const t=b(be.getDefaults(),arguments,["volume"]);this.input=this.output=new z({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Y(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(I.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Bs extends I{constructor(){super(b(Bs.getDefaults(),arguments)),this.name="Destination",this.input=new be({context:this.context}),this.output=new z({context:this.context}),this.volume=this.input.volume;const t=b(Bs.getDefaults(),arguments);je(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(I.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),je(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}hn(n=>{n.destination=new Bs({context:n})});dn(n=>{n.destination.dispose()});class Ah extends ee{constructor(t){super(),this.name="TimelineValue",this._timeline=new It({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Bt extends I{constructor(){super(Object.assign(b(Bt.getDefaults(),arguments,["context"])))}connect(t,e=0,s=0){return mn(this,t,e,s),this}}class xe extends Bt{constructor(){super(Object.assign(b(xe.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=b(xe.getDefaults(),arguments,["mapping","length"]);Ft(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):th(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(X.getDefaults(),{length:1024})}setMap(t,e=1024){const s=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;s[i]=t(o,i)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(s=>s.includes(t));L(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Us extends Bt{constructor(){super(Object.assign(b(Us.getDefaults(),arguments,["value"]))),this.name="Pow";const t=b(Us.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new xe({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Bt.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ue{constructor(t,e){this.id=ue._eventId++,this._remainderTime=0;const s=Object.assign(ue.getDefaults(),e);this.transport=t,this.callback=s.callback,this._once=s.once,this.time=Math.floor(s.time),this._remainderTime=s.time-this.time}static getDefaults(){return{callback:Q,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}ue._eventId=0;class ci extends ue{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(ci.getDefaults(),e);this.duration=s.duration,this._interval=s.interval,this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},ue.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return Ps(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Fe(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){Ps(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Fe(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Le(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class es extends St{constructor(){super(b(es.getDefaults(),arguments)),this.name="Transport",this._loop=new Ah(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new It,this._repeatedEvents=new Ch,this._syncedSignals=[],this._swingAmount=0;const t=b(es.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new Ue({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Y(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(St.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const s=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(s*Math.PI)*this._swingAmount;t+=new Fe(this.context,this._swingTicks*2/3).toSeconds()*i}Ii(!0),this._timeline.forEachAtTime(e,s=>s.invoke(t)),Ii(!1)}schedule(t,e){const s=new ue(this,{callback:t,time:new He(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(t,e,s,i=1/0){const r=new ci(this,{callback:t,duration:new Vt(this.context,i).toTicks(),interval:new Vt(this.context,e).toTicks(),time:new He(this.context,s).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const s=new ue(this,{callback:t,once:!0,time:new He(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(e,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new Fe(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let s;return Z(e)&&(s=this.toTicks(e)),this._clock.start(t,s),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ft(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Vt(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Vt(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new Fe(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new Fe(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),s=this._clock.frequency.timeToTicks(t,e);this.ticks=s}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),s=this.getTicksAtTime(e),i=t-s%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){const s=this.now();let i=this.bpm,r=1/(60/i.getValueAtTime(s)/this.PPQ),o=[];if(t.units==="time"){const c=.015625/r,u=new z(c),l=new Us(-1),h=new z(c);i.chain(u,l,h),i=h,r=1/r,o=[u,l,h]}e||(t.getValueAtTime(s)!==0?e=t.getValueAtTime(s)/r:e=0);const a=new z(e);return i.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const s=this._syncedSignals[e];s.signal===t&&(s.nodes.forEach(i=>i.dispose()),s.signal.value=s.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Ts(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}vs.mixin(es);hn(n=>{n.transport=new es({context:n})});dn(n=>{n.transport.dispose()});class dt extends I{constructor(t){super(t),this.input=void 0,this._state=new oi("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Q,this._syncedStop=Q,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new be({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Y(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(I.getDefaults(),{mute:!1,onstop:Q,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,s){let i=Et(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")L(Le(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,s);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(ve(e,0)),r.duration=s?this.toSeconds(s):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,s)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else Or(this.context),this._start(i,e,s);return this}stop(t){let e=Et(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||Z(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const s=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(s)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,s){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Le(e,0)){const s=this._state.get(e);if(s&&s.state==="started"&&s.time!==e){const i=e-this.toSeconds(s.time);let r;s.duration&&(r=this.toSeconds(s.duration)-i),this._start(t,this.toSeconds(s.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Q,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Se extends Be{constructor(){super(b(Se.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=b(Se.getDefaults(),arguments,["url","onload"]);Yt(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new U({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new J(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Be.getDefaults(),{url:new J,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,s,i=1){L(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=ve(e,this.loopStart):e=ve(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),u=a-c;Nn(o,a)&&(o=(o-c)%u+c),Rt(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Ps(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),Z(s)){let a=this.toSeconds(s);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Ce extends dt{constructor(){super(b(Ce.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=b(Ce.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(dt.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(L(t in Mi,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Mi[this._type];this._source=new Se({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Me=44100*5,vn=2,$t={brown:null,pink:null,white:null},Mi={get brown(){if(!$t.brown){const n=[];for(let t=0;t<vn;t++){const e=new Float32Array(Me);n[t]=e;let s=0;for(let i=0;i<Me;i++){const r=Math.random()*2-1;e[i]=(s+.02*r)/1.02,s=e[i],e[i]*=3.5}}$t.brown=new J().fromArray(n)}return $t.brown},get pink(){if(!$t.pink){const n=[];for(let t=0;t<vn;t++){const e=new Float32Array(Me);n[t]=e;let s,i,r,o,a,c,u;s=i=r=o=a=c=u=0;for(let l=0;l<Me;l++){const h=Math.random()*2-1;s=.99886*s+h*.0555179,i=.99332*i+h*.0750759,r=.969*r+h*.153852,o=.8665*o+h*.3104856,a=.55*a+h*.5329522,c=-.7616*c-h*.016898,e[l]=s+i+r+o+a+c+u+h*.5362,e[l]*=.11,u=h*.115926}}$t.pink=new J().fromArray(n)}return $t.pink},get white(){if(!$t.white){const n=[];for(let t=0;t<vn;t++){const e=new Float32Array(Me);n[t]=e;for(let s=0;s<Me;s++)e[s]=Math.random()*2-1}$t.white=new J().fromArray(n)}return $t.white}};function De(n,t){return lt(this,void 0,void 0,function*(){const e=t/n.context.sampleRate,s=new pn(1,e,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/e,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class Gs extends Be{constructor(){super(b(Gs.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=b(Gs.getDefaults(),arguments,["frequency","type"]);Yt(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new U({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new U({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Y(this,["frequency","detune"])}static getDefaults(){return Object.assign(Be.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class ot extends dt{constructor(){super(b(ot.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=b(ot.getDefaults(),arguments,["frequency","type"]);this.frequency=new X({context:this.context,units:"frequency",value:t.frequency}),Y(this,"frequency"),this.detune=new X({context:this.context,units:"cents",value:t.detune}),Y(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(dt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),s=new Gs({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return ot._periodicWaveCache.find(e=>e.phase===this._phase&&hh(e.partials,this._partials));{const t=ot._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const s=this._getCachedPeriodicWave();if(Z(s)){const{partials:i,wave:r}=s;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),ot._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),ot._periodicWaveCache.length>100&&ot._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Tt(t,0);let e=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(e=s[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const u=2/(c*Math.PI);let l;switch(t){case"sine":l=c<=a?1:0,this._partials[c-1]=l;break;case"square":l=c&1?2*u:0,this._partials[c-1]=l;break;case"sawtooth":l=u*(c&1?1:-1),this._partials[c-1]=l;break;case"triangle":c&1?l=2*(u*u)*(c-1>>1&1?-1:1):l=0,this._partials[c-1]=l;break;case"custom":l=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}l!==0?(r[c]=-l*Math.sin(e*c),o[c]=l*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,s){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*s)+e[o]*Math.sin(o*s);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let s=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)s=Math.max(this._inverseFFT(t,e,o/r*i),s);return ph(-this._inverseFFT(t,e,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}ot._periodicWaveCache=[];class ui extends Bt{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new xe({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Ht extends X{constructor(){super(Object.assign(b(Ht.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=b(Ht.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new z({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(X.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class ss extends dt{constructor(){super(b(ss.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new ui({context:this.context}),this._modulationNode=new z({context:this.context});const t=b(ss.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Ht({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Y(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class ns extends dt{constructor(){super(b(ns.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new z({context:this.context,gain:0});const t=b(ns.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new ot({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new X({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Ht({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new Ht({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Y(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ge extends dt{constructor(){super(b(Ge.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new z({context:this.context,gain:0}),this._thresh=new xe({context:this.context,mapping:e=>e<=0?-1:1});const t=b(Ge.getDefaults(),arguments,["frequency","width"]);this.width=new X({context:this.context,units:"audioRange",value:t.width}),this._triangle=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Y(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(dt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class is extends dt{constructor(){super(b(is.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=b(is.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new X({context:this.context,units:"frequency",value:t.frequency}),this.detune=new X({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Y(this,["frequency","detune"])}static getDefaults(){return Object.assign(ot.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,s=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+s*r)}}get count(){return this._oscillators.length}set count(t){if(Tt(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const s=new ot({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Q});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[e]=s}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,s)=>e.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class rs extends dt{constructor(){super(b(rs.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Ht({context:this.context,value:2});const t=b(rs.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Ge({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Y(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(dt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Ri={am:ss,fat:is,fm:ns,oscillator:ot,pulse:Ge,pwm:rs};class ke extends dt{constructor(){super(b(ke.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=b(ke.getDefaults(),arguments,["frequency","type"]);this.frequency=new X({context:this.context,units:"frequency",value:t.frequency}),this.detune=new X({context:this.context,units:"cents",value:t.detune}),Y(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(ot.getDefaults(),ns.getDefaults(),ss.getDefaults(),is.getDefaults(),Ge.getDefaults(),rs.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Ri[t],s=this.now();if(this._oscillator){const i=this._oscillator;i.stop(s),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof Ri[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&ce(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&ce(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Qt(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return lt(this,void 0,void 0,function*(){return De(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class li extends X{constructor(){super(Object.assign(b(li.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new z({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,je(this._constantSource,this._sum)}static getDefaults(){return Object.assign(X.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class zs extends Bt{constructor(){super(Object.assign(b(zs.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=b(zs.getDefaults(),arguments,["min","max"]);this._mult=this.input=new Ht({context:this.context,value:t.max-t.min}),this._add=this.output=new li({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Bt.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class hi extends Bt{constructor(){super(Object.assign(b(hi.getDefaults(),arguments))),this.name="Zero",this._gain=new z({context:this.context}),this.output=this._gain,this.input=void 0,Yt(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),qr(this.context.getConstant(0),this._gain),this}}class En extends I{constructor(){super(b(En.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=U.prototype._fromType,this._toType=U.prototype._toType,this._is=U.prototype._is,this._clampValue=U.prototype._clampValue;const t=b(En.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new ot(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new z({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new X({context:this.context,units:"audioRange",value:0}),this._zeros=new hi({context:this.context}),this._a2g=new ui({context:this.context}),this._scaler=this.output=new zs({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Y(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(ot.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,s=this.max;this._units=t,this.min=e,this.max=s}get state(){return this._oscillator.state}connect(t,e,s){return(t instanceof U||t instanceof X)&&(this.convert=t.convert,this.units=t.units),mn(this,t,e,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Wr(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Tt(r,n,t),e.set(this,r)}})}}function se(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Tt(this.toSeconds(r),n,t),e.set(this,r)}})}}class os extends dt{constructor(){super(b(os.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=b(os.getDefaults(),arguments,["url","onload"]);this._buffer=new J({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(dt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1,reverse:!1})}load(t){return lt(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Q){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,s){return super.start(t,e,s),this}_start(t,e,s){this._loop?e=ve(e,this._loopStart):e=ve(e,0);const i=this.toSeconds(e),r=s;s=ve(s,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(s);o=o/this._playbackRate,t=this.toSeconds(t);const a=new Se({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Et(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(s=>s.stop(e))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,s)}seek(t,e){const s=this.toSeconds(e);if(this._state.getValueAtTime(s)==="started"){const i=this.toSeconds(t);this._stop(s),this._start(s,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),s=this._state.getNextState("stopped",e);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Lt([se(0)],os.prototype,"fadeIn",void 0);Lt([se(0)],os.prototype,"fadeOut",void 0);class In extends dt{constructor(){super(b(In.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=b(In.getDefaults(),arguments,["url","onload"]);this.buffer=new J({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new Ue({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(dt.getDefaults(),{onload:Q,onerror:Q,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,s){e=ve(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const i=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/i),s&&this.stop(t+this.toSeconds(s))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){this._stop(t),this._start(t,e,s)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach(e=>{e.fadeOut=0,e.stop(t)}),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),s=e*this._grainSize;if(this.log("offset",s),!this.loop&&s>this.buffer.duration){this.stop(t);return}const i=s<this._overlap?0:this._overlap,r=new Se({context:this.context,url:this.buffer,fadeIn:i,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:ii(this.detune/100)}).connect(this.output);r.start(t,this._grainSize*e),r.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const o=this._activeSources.indexOf(r);o!==-1&&this._activeSources.splice(o,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){Tt(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);Tt(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(t=>t.dispose()),this}}class Nh extends Bt{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new xe({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Mt extends I{constructor(){super(b(Mt.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new X({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=b(Mt.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(I.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(Qt(t))return t;{let s;for(s in Cs)if(Cs[s][e]===t)return s;return t}}_setCurve(t,e,s){if(Qt(s)&&Reflect.has(Cs,s)){const i=Cs[s];ge(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Ft(s)&&t!=="_decayCurve")this[t]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,t):(L(Ft(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,s,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),this.triggerAttack(e,s),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,s=0){return mn(this,t,e,s),this}asArray(t=1024){return lt(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,s=new pn(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:s}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Lt([se(0)],Mt.prototype,"attack",void 0);Lt([se(0)],Mt.prototype,"decay",void 0);Lt([Wr(0,1)],Mt.prototype,"sustain",void 0);Lt([se(0)],Mt.prototype,"release",void 0);const Cs=(()=>{let t,e;const s=[];for(t=0;t<128;t++)s[t]=Math.sin(t/127*(Math.PI/2));const i=[],r=6.4;for(t=0;t<127;t++){e=t/127;const p=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=p/10+e*.83}i[127]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/127*a)/a;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const u=[];for(t=0;t<128;t++){e=t/127;const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);u[t]=Math.abs(f*(1-e))}function l(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function h(p){return p.slice(0).reverse()}return{bounce:{In:l(u),Out:u},cosine:{In:s,Out:h(s)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:l(i)},sine:{In:c,Out:l(c)},step:{In:o,Out:l(o)}}})();class Jt extends I{constructor(){super(b(Jt.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e);const t=b(Jt.getDefaults(),arguments);this._volume=this.output=new be({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Y(this,"volume")}static getDefaults(){return Object.assign(I.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const s=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,s.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,s,i){const r=this.toSeconds(s),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Kt extends Jt{constructor(){super(b(Kt.getDefaults(),arguments));const t=b(Kt.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(Jt.getDefaults(),{detune:0,onsilence:Q,portamento:0})}triggerAttack(t,e,s=1){this.log("triggerAttack",t,e,s);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,s),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const s=this.toSeconds(e),i=t instanceof Dt?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,s)}else this.frequency.setValueAtTime(i,s);return this}}Lt([se(0)],Kt.prototype,"portamento",void 0);class _n extends Mt{constructor(){super(b(_n.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new z({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Ae extends Kt{constructor(){super(b(Ae.getDefaults(),arguments)),this.name="Synth";const t=b(Ae.getDefaults(),arguments);this.oscillator=new ke(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new _n(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Y(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Kt.getDefaults(),{envelope:Object.assign(oe(Mt.getDefaults(),Object.keys(I.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(oe(ke.getDefaults(),[...Object.keys(dt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class $s extends Kt{constructor(){super(b($s.getDefaults(),arguments)),this.name="ModulationSynth";const t=b($s.getDefaults(),arguments);this._carrier=new Ae({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Ae({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new X({context:this.context,units:"frequency"}),this.detune=new X({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new Ht({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new z({context:this.context,gain:0}),Y(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Kt.getDefaults(),{harmonicity:3,oscillator:Object.assign(oe(ke.getDefaults(),[...Object.keys(dt.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(oe(Mt.getDefaults(),Object.keys(I.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(oe(ke.getDefaults(),[...Object.keys(dt.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(oe(Mt.getDefaults(),Object.keys(I.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class Lr extends $s{constructor(){super(b(Lr.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new ui({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class as extends I{constructor(){super(b(as.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=b(as.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new U({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new U({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new U({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new U({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(I.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){L(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*19980+20;e[o]=c}const s=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,s,i),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class _e extends I{constructor(){super(b(_e.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new z({context:this.context}),this.output=new z({context:this.context}),this._filters=[];const t=b(_e.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new X({context:this.context,units:"positive",value:t.Q}),this.frequency=new X({context:this.context,units:"frequency",value:t.frequency}),this.detune=new X({context:this.context,units:"cents",value:t.detune}),this.gain=new X({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Y(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(I.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){L(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(s=>s.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=ce(t)?t:parseInt(t,10),s=[-12,-24,-48,-96];let i=s.indexOf(e);L(i!==-1,`rolloff can only be ${s.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new as({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,je(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new as({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>s[o]*=r)}),e.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Ts(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class cs extends Ae{constructor(){super(b(cs.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=b(cs.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Y(this,["oscillator","envelope"])}static getDefaults(){return Pe(Kt.getDefaults(),Ae.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const s=this.toSeconds(e),i=this.toFrequency(t instanceof Dt?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,s),this.oscillator.frequency.exponentialRampToValueAtTime(i,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Lt([Wr(0)],cs.prototype,"octaves",void 0);Lt([se(0)],cs.prototype,"pitchDecay",void 0);class Mn extends Jt{constructor(){super(b(Mn.getDefaults(),arguments)),this.name="NoiseSynth";const t=b(Mn.getDefaults(),arguments);this.noise=new Ce(Object.assign({context:this.context},t.noise)),this.envelope=new _n(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Jt.getDefaults(),{envelope:Object.assign(oe(Mt.getDefaults(),Object.keys(I.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(oe(Ce.getDefaults(),Object.keys(dt.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,s),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const di=new Set;function pi(n){di.add(n)}function jr(n,t){const e=`registerProcessor("${n}", ${t})`;di.add(e)}function Oh(){return Array.from(di).join(`
`)}class Vi extends I{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Q;const e=URL.createObjectURL(new Blob([Oh()],{type:"text/javascript"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const Dh=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;pi(Dh);const Eh=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;pi(Eh);const Ih=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;pi(Ih);const Mh="feedback-comb-filter",Rh=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;jr(Mh,Rh);class us extends Jt{constructor(){super(b(us.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=b(us.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(s=>{const i=parseInt(s,10);if(L(Ss(s)||ce(i)&&isFinite(i),`url key is neither a note or midi pitch: ${s}`),Ss(s)){const r=new Dt(this.context,s).toMidi();e[r]=t.urls[s]}else ce(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new ai({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(Jt.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Q,onerror:Q,release:.1,urls:{}})}_findClosest(t){let s=0;for(;s<96;){if(this._buffers.has(t+s))return-s;if(this._buffers.has(t-s))return s;s++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,s=1){return this.log("triggerAttack",t,e,s),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=Pr(new Dt(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),u=o-c,l=this._buffers.get(u),h=ii(c+a),p=new Se({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);p.start(e,0,l.duration/h,s),Ft(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(s=>{const i=new Dt(this.context,s).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,s,i=1){const r=this.toSeconds(s);return this.triggerAttack(t,r,i),Ft(e)?(L(Ft(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,s){if(L(Ss(t)||isFinite(t),`note must be a pitch or midi: ${t}`),Ss(t)){const i=new Dt(this.context,t).toMidi();this._buffers.add(i,e,s)}else this._buffers.add(t,e,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}Lt([se(0)],us.prototype,"attack",void 0);Lt([se(0)],us.prototype,"release",void 0);class Zs extends I{constructor(){super(Object.assign(b(Zs.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Nh({context:this.context}),this.a=new z({context:this.context,gain:0}),this.b=new z({context:this.context,gain:0}),this.output=new z({context:this.context}),this._internalChannels=[this.a,this.b];const t=b(Zs.getDefaults(),arguments,["fade"]);this.fade=new X({context:this.context,units:"normalRange",value:t.fade}),Y(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",Yt(this._split,this.a.gain,0),Yt(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(I.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Xs extends I{constructor(t){super(t),this.name="Effect",this._dryWet=new Zs({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new z({context:this.context}),this.effectReturn=new z({context:this.context}),this.input=new z({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Y(this,"wet")}static getDefaults(){return Object.assign(I.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class Qs extends I{constructor(){super(Object.assign(b(Qs.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=b(Qs.getDefaults(),arguments,["pan"]);this.pan=new U({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Y(this,"pan")}static getDefaults(){return Object.assign(I.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const Br="bit-crusher",Vh=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;jr(Br,Vh);class Rn extends Xs{constructor(){super(b(Rn.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const t=b(Rn.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new Ys({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Xs.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class Ys extends Vi{constructor(){super(b(Ys.getDefaults(),arguments)),this.name="BitCrusherWorklet";const t=b(Ys.getDefaults(),arguments);this.input=new z({context:this.context}),this.output=new z({context:this.context}),this.bits=new U({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(Vi.getDefaults(),{bits:12})}_audioWorkletName(){return Br}onReady(t){je(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Hs extends I{constructor(){super(b(Hs.getDefaults(),arguments,["channels"])),this.name="Split";const t=b(Hs.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(I.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Js extends I{constructor(){super(b(Js.getDefaults(),arguments,["channels"])),this.name="Merge";const t=b(Js.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(I.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class Vn extends Xs{constructor(){super(b(Vn.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=b(Vn.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Xs.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),Tt(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),Tt(t,0),this._preDelay=t,this.generate()}generate(){return lt(this,void 0,void 0,function*(){const t=this.ready,e=new pn(2,this._decay+this._preDelay,this.context.sampleRate),s=new Ce({context:e}),i=new Ce({context:e}),r=new Js({context:e});s.connect(r,0,0),i.connect(r,0,1);const o=new z({context:e}).toDestination();r.connect(o),s.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Q),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class ls extends I{constructor(){super(b(ls.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=b(ls.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new z({context:this.context}),this._split=new Hs({context:this.context,channels:t.channels}),this.input.connect(this._split),Tt(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type,this.smoothing=t.smoothing}static getDefaults(){return Object.assign(I.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,e)=>{const s=this._buffers[e];this._type==="fft"?t.getFloatFrequencyData(s):this._type==="waveform"&&t.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((e,s)=>{e.fftSize=t*2,this._buffers[s]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){L(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(e=>e.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class Ks extends I{constructor(){super(b(Ks.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new ls({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Fn extends Ks{constructor(){super(b(Fn.getDefaults(),arguments,["smoothing"])),this.name="Meter";const t=b(Fn.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new ls({context:this.context,size:256,type:"waveform",channels:t.channelCount}),this.smoothing=t.smoothing,this.normalRange=t.normalRange,this._rms=new Array(t.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(Ks.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return ln("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),s=(this.channels===1?[t]:t).map((i,r)=>{const o=i.reduce((c,u)=>c+u*u,0),a=Math.sqrt(o/i.length);return this._rms[r]=Math.max(a,this._rms[r]*this.smoothing),this.normalRange?this._rms[r]:Fr(this._rms[r])});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class ut extends I{constructor(){super(b(ut.getDefaults(),arguments,["solo"])),this.name="Solo";const t=b(ut.getDefaults(),arguments,["solo"]);this.input=this.output=new z({context:this.context}),ut._allSolos.has(this.context)||ut._allSolos.set(this.context,new Set),ut._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(I.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ut._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ut._soloed.has(this.context)||ut._soloed.set(this.context,new Set),ut._soloed.get(this.context).add(this)}_removeSolo(){ut._soloed.has(this.context)&&ut._soloed.get(this.context).delete(this)}_isSoloed(){return ut._soloed.has(this.context)&&ut._soloed.get(this.context).has(this)}_noSolos(){return!ut._soloed.has(this.context)||ut._soloed.has(this.context)&&ut._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ut._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ut._allSolos=new Map;ut._soloed=new Map;class tn extends I{constructor(){super(b(tn.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=b(tn.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Qs({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new be({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Y(this,["pan","volume"])}static getDefaults(){return Object.assign(I.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class fe extends I{constructor(){super(b(fe.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=b(fe.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new ut({solo:t.solo,context:this.context}),this._panVol=this.output=new tn({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Y(this,["pan","volume"])}static getDefaults(){return Object.assign(I.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return fe.buses.has(t)||fe.buses.set(t,new z({context:this.context})),fe.buses.get(t)}send(t,e=0){const s=this._getBus(t),i=new z({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(s),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}fe.buses=new Map;class en extends I{constructor(){super(b(en.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new z({context:this.context}),this.output=void 0,this.low=new _e({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new _e({context:this.context,frequency:0,type:"highpass"}),this.mid=new _e({context:this.context,frequency:0,type:"lowpass"}),this.high=new _e({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const t=b(en.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new X({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new X({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new X({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Y(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(I.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Ts(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class Fh extends I{constructor(){super(...arguments),this.name="Listener",this.positionX=new U({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new U({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new U({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new U({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new U({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new U({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new U({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new U({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new U({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(I.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}hn(n=>{n.listener=new Fh({context:n})});dn(n=>{n.listener.dispose()});class sn extends I{constructor(){super(b(sn.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=b(sn.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new U({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new U({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new U({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new U({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new U({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),Y(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(I.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Pn extends I{constructor(){super(Object.assign(b(Pn.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const t=b(Pn.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new sn({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,Y(this,"threshold")}static getDefaults(){return Object.assign(I.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class qn extends I{constructor(){super(b(qn.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new z({context:this.context}),this._internalChannels=[];const t=b(qn.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new en({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new z({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new z({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new z({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Y(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(I.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Ts(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}function dd(){return Ot().now()}const pd=Ot().transport;Ot().destination;Ot().destination;Ot().listener;Ot().draw;const fd=Ot();export{Lr as A,Rn as B,sn as C,Dn as D,qn as E,_e as F,In as G,Pn as L,Fn as M,Mn as N,Vn as R,Ae as S,J as T,be as V,pd as a,En as b,fd as c,Fr as g,dd as n,hd as s};
